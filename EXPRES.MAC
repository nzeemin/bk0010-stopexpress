	.TITLE	EXPRES
	.MCALL	.EXIT
	.ASECT

	.=000400
;
; Блок переменных
;
	.EVEN
Y00000::.WORD	0			; Score
Y00002:	.WORD	0			; Top Score
Y00004:	.BYTE	0			; Оставшееся время, начальное значение 200
Y00005:	.BYTE	0
Y00006:	.BYTE	0			; ???
Y00007:	.BYTE	0			; Stage
Y00010:	.BYTE	0			; Lives -- счётчик жизней
Y00011:	.BYTE	0			; Адрес распакованной последовательности
Y00012:	.BYTE	0			; // старший байт адреса
Y00013:	.BYTE	0			; Адрес бегущей строки демо-режима???
Y00014:	.BYTE	0			; // старший байт адреса
Y00015:	.BYTE	0			; ???
Y00016:	.WORD	0			; Быстрый счётчик
Y00020:	.WORD	0			; Быстрый счётчик
Y00022:	.WORD	0			; Быстрый счётчик для счётчика Y00066
Y00024:	.WORD	0			; Быстрый счётчик
Y00026:	.WORD	0			; Быстрый счётчик времени
Y00030:	.WORD	0			; Быстрый счётчик
Y00032:	.WORD	0
Y00034:	.BYTE	0
Y00035:	.BYTE	0			; Признак демо-режима: 1 демо, 0 реальная игра
Y00036:	.BYTE	0
Y00037:	.BYTE	0
Y00040:	.BYTE	0
Y00041:	.BYTE	0			; Положение человечка X
Y00042:	.BYTE	0			; Положение человечка Y
Y00043:	.BYTE	0
Y00044:	.BYTE	0
Y00045:	.BYTE	0
Y00046:	.BYTE	0			; ??? что-то с движением человечка
Y00047:	.BYTE	0			; ??? что-то с движением человечка
Y00050:	.BYTE	0
Y00051:	.BYTE	0
Y00052:	.BYTE	0
	.BYTE	0
Y00054:	.BYTE	0
Y00055:	.BYTE	0
Y00056:	.BYTE	0
Y00057:	.BYTE	0
Y00060:	.BYTE	0
Y00061:	.BYTE	0
Y00062:	.BYTE	0
Y00063:	.BYTE	0
Y00064:	.BYTE	0
Y00065:	.BYTE	0
Y00066:	.BYTE	0
Y00067:	.BYTE	0
Y00070:	.BYTE	0
Y00071:	.BYTE	0
Y00072:	.BYTE	0
Y00073:	.BYTE	0
Y00074:	.BYTE	0
Y00075:	.BYTE	0
Y00076:	.WORD	0
Y00100:	.BLKB	40			; 4 записи по 8. байт
Y00140:	.BYTE	0
Y00141:	.BYTE	0
Y00142:	.BYTE	0
Y00143:	.BYTE	0
Y00144:	.BYTE	0
Y00145:	.BYTE	0
Y00146:	.BYTE	0
Y00147:	.BYTE	0
Y00150:	.BYTE	0
Y00151:	.BYTE	0
Y00152:	.BYTE	0
Y00153:	.BYTE	0
Y00154:	.BYTE	0
Y00155:	.BYTE	0			; Car -- номер вагона
Y00156:	.WORD	0
	.WORD	0
Y00162:	.WORD	0
Y00164:	.BYTE	0
Y00165:	.BYTE	0
Y00166:	.BYTE	0			; Счётчик -- балка появляется достижении 0
Y00167:	.BYTE	0
Y00170:	.WORD	0
Y00172:	.BYTE	0
Y00173:	.BYTE	0
Y00174:	.BYTE	0			; Счётчик
Y00175:	.BYTE	0
Y00176:	.BYTE	0			; Счётчик
Y00177:	.BYTE	0
Y00200:	.WORD	0			; Счётчик

	.EVEN
Z34560:	.BYTE	0
	.BYTE	0
Z34562:	.BYTE	0
	.BYTE	0
Z34564:	.BYTE	0
Z34565:	.BYTE	0
Z34566:	.BYTE	0
Z34567:	.BYTE	0
Z34570:	.BYTE	0
Z34571:	.BYTE	0
	.EVEN
VAREND::

	.=001000
START::
	EMT	14
	MTPS	#000340
;
	CALL	Z33454			; Показываем титульный экран один раз
	EMT	6			; Ожидаем нажатия любой клавиши

; Сюда приходим после начальной очистки экрана и распаковки
Z01614:	CALL	Z33102			; Очистка переменных
Z01620:
	CALL	Z33420			; Очистка образа экрана
	CALL	Z33454			; Формирование реального экрана по образу
	CALL	TILSTD			; Включить стандартный набор тайлов
	MOVB	#000001, @#Y00006
;
Z01662:	MOVB	@#Y00006, R0
	DECB	R0
	BEQ	Z01676
	CALL	Z02276
Z01676:	CALL	Z25666			; Stage = 1, Lives = 3, Score = 0
	MOVB	#000001, @#Y00035	; Демо-режим
	MOVB	#000001, @#Y00007	; Stage = 1
	MOVB	#000003, @#Y00010	; Lives = 3
	MOV	#Z25206, Z34570		; Адрес бегущей строки для демо-режима
	MOVB	Z34570, @#Y00013
	MOVB	Z34571, @#Y00014
	BR	Z02316
; Игровой цикл, начало
Z01774:	CLRB	@#Y00035		; Реальный режим (не демо)
	CALL	Z34226			; Клавиатура
	BEQ	Z02012
	BR	Z02316
Z02012:	MOVB	@#Y00006, R0
	DECB	R0
	BEQ	Z02026
	CALL	Z02276
Z02026:
;NOTE: Здесь был показ экрана с описанием игры (Z31264), убран для экономии памяти
Z02174:	BR	Z02316
;
Z02276:	CALL	Z33420			; Очистка образа экрана
	CALL	Z33454			; Формирование реального экрана по образу
	JMP     TILSTD			; Включить стандартный набор тайлов
;
Z02316:	MOVB	@#Y00006, R0
	DECB	R0
	BEQ	Z02332
	CALL	Z02276
Z02332:
	CALL	Z25666			; Stage = 1, Lives = 3, Score = 0
; Начало раунда
Z02342:	CALL	Z25734
	CALL	Z20644
	CALL	Z10044			; Опускание человечка на верёвке
	BHIS	Z02364
	BR	Z01774			; На начало игрового цикла
; Основной игровой цикл?
Z02364:	CALL	Z33454			; Формирование реального экрана по образу
	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z22754			; Уменьшить оставшееся время
	CALL	Z20724
	CALL	Z21552
	CALL	Z14664
	CALL	Z14420
	CALL	Z14034
	CALL	Z11400
	CALL	Z22050
	CALL	Z24774			; Если не демо, то GAME OVER
	CALL	Z20526
	CALL	Z25574
	CALL	Z22712
	CALL	Z21520			; Обработка счётчика 100162
	CALL	Z15346
	CALL	Z11672
	CALL	Z13674
	CALL	Z14516
	CALL	Z14140
	CALL	Z14330
	CALL	Z22202
	CALL	Z23002
	MOVB	@#Y00034, R0
	CMPB	R0, #000002
	BNE	Z02546
	JMP	Z06202
Z02546:	TSTB	R0
	BEQ	Z02556
	JMP	Z05160
Z02556:	TSTB	@#Y00035		; демо-режим?
	BEQ	Z02612			;   да => переходим
	CALL	Z34226			; Клавиатура
	BNE	Z01774			; есть нажатие => На начало игрового цикла
	MOVB	@#Y00035, R0		; берём признак демо-режима
	INCB	R0			; (Y00035) = 377 ?
	BEQ	Z01774			; да => На начало игрового цикла
Z02612:	CMPB	@#Y00155, #000012
	BLO	Z02364			; повтор
	MOVB	#000017, @#Y00041	; Положение человечка X = 15.
	MOVB	#000007, @#Y00042	; Положение человечка Y = 7
	CLR	@#Y00044
	CLRB	@#Y00051
	MOVB	#000377, @#Y00050	; DX = -1 -- влево
; Игровой цикл -- ???
Z02654:	CALL	Z33454			; Формирование реального экрана по образу
	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z20724
	CALL	Z21552
	CALL	Z20526
	CALL	Z25574
	CALL	Z14420
	CALL	Z14034
	CALL	Z11400
	CALL	Z22050
	CALL	Z11256
	CALL	Z24774			; Если не демо, то GAME OVER
	CALL	Z22712
	CALL	Z21520			; Обработка счётчика 100162
	CALL	Z14516
	CALL	Z14140
	CALL	Z22202
	TSTB	@#Y00016		; Проверяем быстрый счётчик
	BNE	Z02654			; не ноль => повторяем цикл
	CALL	Z13224
	DECB	@#Y00041		; Положение человечка X на 1 меньше
	BNE	Z02654
Z03010:
Z03014:	CALL	Z33454			; Формирование реального экрана по образу
	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z20724
	CALL	Z21552
	CALL	Z20526
Z03050:
	CALL	Z25574
	CALL	Z14420
	CALL	Z14034
	CALL	Z11400
	CALL	Z22050
	CALL	Z11350
	CALL	Z11256
	CALL	Z24774			; Если (100035)<>0 то GAME OVER
	CALL	Z22712
	CALL	Z21520			; Обработка счётчика Y00162
	CALL	Z14516
	CALL	Z14140
	CALL	Z22202
	TSTB	@#Y00016
	BNE	Z03014
	MOVB	@#Y00042, R0		; Положение человечка Y
	CMPB	R0, #000014		; равно 12. ?
	BEQ	Z03170			; да => переходим
	INCB	R0			; вниз на 1 строку
	MOVB	R0, @#Y00042		; Сохраняем положение человечка Y
	BR	Z03014
Z03170:	CALL	Z11020
	MOV	#002200, @#Y00174
	MOVB	#000003, @#Y00176
Z03210:	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z20724
	CALL	Z21552
	CALL	Z22050
	CALL	Z24774			; Если (100035)<>0 то GAME OVER
	CALL	Z22712
	CALL	Z21520			; Обработка счётчика Y00162
	CALL	Z22202
	CALL	Z20526
	CALL	Z33454			; Формирование реального экрана по образу
	CMPB	@#Y00155, #000013
	BNE	Z03306
	TSTB	@#Y00154
	BEQ	Z03326
Z03306:	TSTB	@#Y00015
	BNE	Z03210
	CALL	Z20134
	CALL	Z26740
	BR	Z03210
Z03326:
	CALL	Z33420			; Очистка образа экрана
	CALL	Z33454			; Формирование реального экрана по образу
	MOV	#41210, R3		; блок 200 тайлов с 200 тайла
	CALL	Z33302			; Скопировать тайлы
Z03352:	CALL	Z26156
	CALL	Z20644
	CALL	Z10470
	BHIS	Z03374
	JMP	Z01774
Z03374:	CALL	Z33454			; Формирование реального экрана по образу
	CALL	Z25454
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z22754			; Уменьшить оставшееся время
	CALL	Z20724
	CALL	Z21552
	CALL	Z14664
	CALL	Z20072
	CALL	Z16762
	CALL	Z17526
	CALL	Z11400
	CALL	Z22462
	CALL	Z24774			; Если (100035)<>0 то GAME OVER
	CALL	Z20526
	CALL	Z25574
	CALL	Z22712			; Скроллинг насыпи под поездом
	CALL	Z21520			; Обработка счётчика скроллируемого фона
	CALL	Z22202
	CALL	Z11672
	CALL	Z13674
	CALL	Z17154
	CALL	Z17650
	CALL	Z15346
	CALL	Z23606
	TSTB	@#Y00034
	BEQ	Z03552
	JMP	Z07052
Z03552:	TSTB	@#Y00035		; демо-режим?
	BEQ	Z03606			; нет => переходим
	CALL	Z34226			; Клавиатура
	BEQ	Z03572
	JMP	Z01774
Z03572:	MOVB	@#Y00035, R0		; берём признак демо-режима
	INCB	R0			; (Y00035) = 377 ?
	BNE	Z03606			; нет => переходим
	JMP	Z01774
Z03606:	TSTB	@#Y00036
	BNE	Z03620
	BR	Z03374
Z03620:	TSTB	@#Y00037
	BNE	Z03632
	BR	Z03374
Z03632:	CMPB	@#Y00041, #000002	; Положение человечка = 2 ?
	BEQ	Z03646
	BR	Z03374
; Игровой экран CONGRATULATIONS -- подготовка
Z03646:	CALL	Z11020
	CALL	Z33420			; Очистка образа экрана
	CALL	Z33454			; Формирование реального экрана по образу
;Z03662:	MOV	#Z43412, R3		; блок 060 тайлов с 260 тайла -- тайлы локомотива
;Z03666:	CALL	Z33302			; Скопировать тайлы
; Игровой цикл CONGRATULATIONS
Z03672:	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z04450			; Локомотив
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z20724			; Скроллирующийся фон
	CALL	Z21552
	CALL	Z22050
	CALL	Z04572			; Вывод строки CONGRATULATION
	CALL	Z24774			; Если демо то GAME OVER
Z03736:		;CALL Z20526			; Звук
	CALL	Z25574
	CALL	Z22712			; Скроллинг насыпи под поездом
	CALL	Z21520			; Обработка счётчика скроллируемого фона
	CALL	Z22202
	CALL	Z33454			; Формирование реального экрана по образу
	TSTB	@#Y00016
	BNE	Z03672
	CALL	Z20134
	CMPB	@#Y00155, #000025
	BNE	Z03672
	MOVB	@#Y00154, R0
	DECB	R0
	BNE	Z03672
	MOV	#000400, @#Y00174
	MOV	#020000, @#Y00176	; ???
Z04034:	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z04450			; Локомотив
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z20724
	CALL	Z21552
	CALL	Z22050
	CALL	Z04572			; Вывод строки CONGRATULATION
	CALL	Z24774			; Если демо то GAME OVER
	CALL	Z33454			; Формирование реального экрана по образу
	CMPB	@#Y00175, #000002
	BHIS	Z04144
Z04114:		;CALL Z20526			; Звук
	CALL	Z25574
	CALL	Z22712			; Скроллинг насыпи под поездом
	CALL	Z21520			; Обработка счётчика скроллируемого фона
	CALL	Z22202			; Появление и движение балки
	BR	Z04250
Z04144:	MOV	#Y00174, R3
	CALL	Z25554			; Увеличить счётчик R3
	BLO	Z04250
Z04156:		;CALL Z20526			; Звук
	MOVB	@#<Y00202+673>, R0
	MOV	#<Y00202+677>, R3
	MOV	#Y01102, R2
	MOV	#000037, R1
Z04202:	MOVB	-(R3), -(R2)
	SOB	R1, Z04202
	MOVB	R0, -(R2)
	DEC	@#Y00162
	MOV	@#Y00162, R3
	ADD	#Z21126, R3
	TSTB	(R3)
Z04226:	BNE	Z04236
	MOV	#000124, @#Y00162
Z04236:	TSTB	@#Y00164
	BEQ	Z04250
	INCB	@#Y00165
Z04250:	MOV	#Y00176, R3
	CALL	Z25554				; Увеличить счётчик R3
	BHIS	Z04266
Z04262:	BR	Z04034				; повтор
Z04266:	INCB	@#Y00175
	CMPB	@#Y00175, #000012
	BLO	Z04262
	CLR	R1
	DEC	R1
Z04306:	SOB	R1, Z04306	; ожидание
	;		CALL	Z25570		; RETURN
	CLRB	@#Y00172
	MOV	#000377, R1	; Счётчик цикла = 255.
Z04324:	MOV	R1, -(SP)	; Начало цикла, сохраняем R1
	CALL	Z25454		;   Увеличить счётчики
	CALL	Z22322		;   Скопировать блок тайлов поезда на экран план
	CALL	Z04450		;   Локомотив
	CALL	Z04754
	CALL	Z24466		;   Вывод индикаторной строки вверху экрана
	CALL	Z20724
	CALL	Z21552
	CALL	Z22050
	CALL	Z04606		;   Вывод строки THE TRAIN IS STOPPED
	CALL	Z24774		;   Если (100035)<>0 то GAME OVER
	CALL	Z05124
	CALL	Z33454		; Формирование реального экрана по образу
	MOV	(SP)+, R1	;   восстанавливаем R1
	SOB	R1, Z04324	; повторение цикла
	CALL	Z33420		; Очистка образа экрана
	CALL	Z33454		; Формирование реального экрана по образу
	CALL	TILSTD			; Включить стандартный набор тайлов
	TSTB	@#Y00035	; демо-режим?
	BNE	Z04440		; да => переходим
Z04440:	INCB	@#Y00007	; Stage += 1
	JMP	Z02342		; Переход на начало раунда
;
Z04450:	MOV	#Z30300, R3	; Адрес тайлов локомотива
	CLRB	Z34564
	MOVB	#000011, R4
	CMPB	@#Y00155, #000025
	BEQ	Z04550
	MOVB	@#Y00154, R0
	BEQ	Z04546
	MOV	#000040, R2
	SUB	R0, R2
Z04510:	MOV	R0, -(SP)
	ADD	R2, R3
	MOVB	R4, Z34565
	CALL	Z33362
Z04524:					;NOTE: Эта строчка лишняя: MOV #000012, R0
Z04530:	MOVB	(R3)+, (R1)+
	SOB	R0, Z04530
	MOV	(SP)+, R0
	INC	R4
	CMP	R4, #000027
	BLO	Z04510
Z04546:	RETURN
Z04550:	MOVB	R4, Z34565
	CALL	Z33362
	MOV	#000700, R2
Z04564:	MOVB	(R3)+, (R1)+
	SOB	R2, Z04564
	RETURN
;
Z04572:	MOV	#Z04622, R3		; Адрес строки CONGRATULATION
	MOV	#<Y01106+202>, R1
	JMP	Z34366			; Печать строки
;
Z04606:	MOV	#Z04657, R3		; Адрес строки THE TRAIN IS STOPPED
	MOV	#<Y01106+205>, R1
	JMP	Z34366			; Печать строки
;
Z04622:	.ASCII	/CONGRATULATION@ /
Z04642:	.ASCIZ	/YOU SUCSESS@/
Z04657:	.ASCIZ	/THE TRAIN IS STOPPED@/
	.EVEN

Z04754:	TSTB	@#Y00172
	BNE	Z04764
Z04762:	RETURN
Z04764:	MOV	#<Y01106+650>, R1
	MOV	R1, -(SP)
	CALL	Z05102
	MOV	(SP)+, R1
	INC	R1
	CMPB	@#Y00172, #000002
	BLO	Z05016
	CALL	Z05102
Z05016:	MOV	#<Y01106+1010>, R1
	CMPB	@#Y00172, #000005
	BLO	Z04762
	BEQ	Z05044
	MOV	#Z05064, R3
Z05040:	JMP	Z25402			; рисуем тайлы
Z05044:	MOV	#Z05052, R3
	BR	Z05040
; Последовательности тайлов - ??
Z05052:	.BYTE	203,040,307,204,040,331,204,000,000,000
Z05064:	.BYTE	201,001,203,037,222,001,223,037,242,001,243,000,000,000
	.EVEN
;
Z05102:	MOV	#000177, R0
	MOV	#000006, R2
Z05112:	MOVB	R0, (R1)
	ADD	#000040, R1
	SOB	R2, Z05112
	RETURN
Z05124:	TSTB	@#Y00022
	BNE	Z05146
	CMPB	@#Y00172, #000006
	BHIS	Z05146
	INCB	@#Y00172
Z05146:	RETURN
;
Z05150:	.BYTE	000,237,000,000,020,000,100,011
;
Z05160:
Z05164:
	CLRB	@#Y00065
	CLRB	@#Y00061
	MOV	#002000, @#Y00174
	MOV	#000400, @#Y00176
	MOV	#010000, @#Y00200
	CLR	R1
; Игровой цикл -- падение человечка с поезда
Z05224:	MOV	R1, -(SP)
	CALL	Z33454			; Формирование реального экрана по образу
	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z20724
	CALL	Z21552
	CALL	Z05752
	CALL	Z14664
	CALL	Z15346
	CALL	Z14034
	CALL	Z14140
	CALL	Z22050
	CALL	Z24774			; Если демо-режим, то GAME OVER
	MOV	#Y00200, R3
	CALL	Z25554			; Увеличить счётчик R3
	TSTB	@#Y00175
	BNE	Z05342
	CALL	Z20322
	CALL	Z20322
	BR	Z05372
Z05342:	MOV	#Y00174, R3
	CALL	Z25554
	BLO	Z05360
	CALL	Z20322
Z05360:	TSTB	@#Y00200
	BNE	Z05372
	DECB	@#Y00175
Z05372:	TSTB	@#Y00175
	BEQ	Z05416
	CALL	Z22712			; Скроллинг насыпи под поездом
	CALL	Z21520			; Обработка счётчика скроллируемого фона
	CALL	Z22202
	BR	Z05540
Z05416:	CMPB	@#Y00177, #000004
	BHIS	Z05540
	MOV	#Y00176, R3
	CALL	Z25554
	BLO	Z05526
	MOVB	@#<Y00202+673>, R0
	MOV	#<Y00202+677>, R3
	MOV	#Y01102, R2
	MOV	#000037, R1
Z05460:	MOVB	-(R3), -(R2)
	SOB	R1, Z05460
	MOVB	R0, -(R2)
	DEC	@#Y00162
	MOV	@#Y00162, R3
	ADD	#Z21126, R3
	TSTB	(R3)
	BNE	Z05514
	MOV	#000124, @#Y00162
Z05514:	TSTB	@#Y00164
	BEQ	Z05526
	INCB	@#Y00165
Z05526:	TSTB	@#Y00200
	BNE	Z05540
	INCB	@#Y00177
Z05540:	CMPB	@#Y00177, #000004
	BHIS	Z05566
	TSTB	@#Y00176
	BNE	Z05566
	MOV	#Y00061, R3
	CALL	Z25554
Z05566:	MOVB	@#Y00042, R0		; Положение человечка Y
	CMPB	R0, #000025		; равно 21. ?
	BEQ	Z05650			; да => переходим
	INCB	R0			; ниже на 1 строку
	MOVB	R0, @#Y00042		; Сохраняем Положение человечка Y
	CMPB	R0, #000025
	BEQ	Z05630
	TSTB	@#Y00035		; демо-режим?
	BNE	Z05650			; да => переходим
Z05622:
	BR	Z05650
Z05630:
	MOVB	#000001, @#Y00040
	MOV	#Z33070, @#Y00032
Z05650:	CALL	Z20526
	TSTB	@#Y00030
	BNE	Z05666
	CALL	Z25574
Z05666:	MOVB	@#Y00035, R0		; демо-режим?
	BEQ	Z05700			; нет => переходим
	CALL	Z34226			; Клавиатура
Z05700:	MOV	(SP)+, R1
	TSTB	@#Y00035		; демо-режим?
	BEQ	Z05720			; нет => переходим
	TSTB	R0
	BEQ	Z05720
	JMP	Z01774
Z05720:	DECB	R1
	BEQ	Z05730
	JMP	Z05224
Z05730:
	DECB	@#Y00010		; Уменьшаем счётчик жизней
	BEQ	Z05746			; нет жизней => переходим
	JMP	Z02342			; Начинаем новый раунд
Z05746:	JMP	Z07720			; нет больше жизней
;
Z05752:	MOVB	@#Y00041, R1		; Положение человечка X
	MOVB	@#Y00042, Z34565	; Положение человечка Y сохраняем
	CMPB	R1, #000040		; X > 32. ?
Z05770:	BLO	Z05774
	RETURN
Z05774:	CMPB	R1, #000036
	BLO	Z06006
	MOVB	#000035, R1
Z06006:	BITB	#000001, @#Y00061
	BEQ	Z06022
	INCB	Z34565
Z06022:	MOVB	R1, Z34564
	CALL	Z33362
	MOV	#Z06074, R3		; кувыркающийся человечек 0
	MOVB	@#Y00061, R0
	BEQ	Z06070
	MOV	#Z06111, R3		; кувыркающийся человечек 1
	DECB	R0
	BEQ	Z06070
	MOV	#Z06126, R3		; кувыркающийся человечек 2
	DECB	R0
	BEQ	Z06070
	MOV	#Z06143, R3		; кувыркающийся человечек 3
Z06070:	JMP	Z25402			; рисуем тайлы
; Последовательности тайлов - кувыркающийся человечек
Z06074:	.BYTE	300,001,301,037,320,001,321,037,340,001,341,000,000
Z06111:	.BYTE	302,001,303,001,304,036,322,001,323,001,324,000,000
Z06126:	.BYTE	305,001,306,037,325,001,326,037,345,001,346,000,000
Z06143:	.BYTE	307,001,310,001,311,036,327,001,330,001,331,000,000
;
Z06160:	RETURN
Z06162:	RETURN

Z06202:	CLRB	@#Y00065
	CLRB	@#Y00061
	MOV	#000400, @#Y00174
	MOV	#001000, @#Y00176
	MOV	#003000, @#Y00200
	CLRB	@#Y00172
	MOVB	#000050, @#Y00173
	MOVB	#000050, @#Y01104
	CLR	R1
Z06256:	MOV	R1, -(SP)
	CALL	Z33454
	CALL	Z06446
	CALL	Z25454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z05752
	CALL	Z14664
	CALL	Z15346
	CALL	Z14034
	CALL	Z14140
	CALL	Z22050
	CALL	Z20322
	CALL	Z20322
	CALL	Z24774
	TSTB	@#Y00030
	BNE	Z06372
	CALL	Z25574
Z06372:	TSTB	@#Y00035
	BNE	Z06516
	MOVB	@#Y00172, R1
	MOVB	@#Y00173, R0
	BMI	Z06430
	ADD	R1, R0
	BIT	#177400, R0
	BNE	Z06512
	MOVB	R0, @#Y00172
	BR	Z06516
Z06430:	ADD	R1, R0
	BIT	#177400, R0
	BNE	Z06512
	MOVB	R0, @#Y00172
	BR	Z06516
Z06446:	TSTB	@#Y01104
	BNE	Z06456
	RETURN
Z06456:	CLRB	@#Y01104
	MOV	#000764, R2
	MOV	#000012, R1
Z06472:		;CALL	Z34300		; Звук и RETURN
	MOV	#001130, R2
	MOV	#000017, R1
	RETURN	;JMP	Z34300		; Звук и RETURN
Z06512:	NEGB	@#Y00173
Z06516:	CMPB	@#Y00175, #000020
	BHIS	Z06646
	MOV	#Y00174, R3
	CALL	Z25554
	BLO	Z06646
	CMPB	@#Y00042, #000025		; Y == 21. ?
	BHIS	Z06646
	MOVB	@#<Y00202+644>, R0
	MOV	#<Y00202+641>, R3
	MOV	#<Y00202+640>, R2
	MOV	#000037, R1
Z06570:	MOVB	(R3)+, (R2)+
	SOB	R1, Z06570
	MOVB	R0, (R2)
	INC	@#Y00162
	MOV	@#Y00162, R3
	ADD	#177653, R3
	BNE	Z06620
	CLR	@#Y00162
Z06620:	TSTB	@#Y00164
	BEQ	Z06646
	DECB	@#Y00165
	CMPB	@#Y00165, #000040
	BLO	Z06646
	CLRB	@#Y00164
Z06646:	MOV	#Y00176, R3
	CALL	Z25554
	BLO	Z06722
	MOVB	@#Y00042, R0			; Положение человечка Y
	CMPB	R0, #000025
	BHIS	Z06722
	INCB	R0
	MOVB	R0, @#Y00042
	CMPB	R0, #000025
	BNE	Z06722
	MOVB	#000001, @#Y00040
	MOV	#Z33070, @#Y00032
Z06722:	CMPB	@#Y00175, #000020
	BHIS	Z06750
	MOV	#Y00200, R3
	CALL	Z25554
Z06742:	BLO	Z06750
	INCB	@#Y00175
Z06750:	TSTB	@#Y00035
	BEQ	Z06762
	CALL	Z34226
Z06762:	MOV	(SP)+, R1
	TSTB	@#Y00035
	BEQ	Z07002
	TSTB	R0
	BEQ	Z07002
	JMP	Z01774
Z07002:	DECB	R1
	BEQ	Z07012
	JMP	Z06256
Z07012:	;		CALL	Z25570		; RETURN
	DECB	@#Y00010
	BEQ	Z07030
	JMP	Z02342
Z07030:	JMP	Z07720

Z07052:	;		CALL	Z25570		; RETURN
	CMPB	@#Y00042, #000021		; Y == 17. ?
	BLO	Z07074
	MOVB	#000020, @#Y00042		; Y = 16.
Z07074:	CLRB	@#Y00061
	MOVB	@#Y00034, R0
	INCB	R0
	BNE	Z07114
	BR	Z07306
Z07114:	MOV	#Z07702, R3
Z07120:
	MOV	#000100, R1
Z07130:	MOV	R1, -(SP)
	CALL	Z33454
	CALL	Z25454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z05752
	CALL	Z14664
	CALL	Z20072
	CALL	Z16762
	CALL	Z17526
	CALL	Z22462
	CALL	Z24774
	CALL	Z22712
	CALL	Z21520
	CALL	Z22202
	CALL	Z17154
	TSTB	@#Y00035
	BEQ	Z07250
	CALL	Z34226
Z07250:	MOV	(SP)+, R1
	TSTB	@#Y00035
	BEQ	Z07270
	TSTB	R0
	BEQ	Z07270
	JMP	Z01774
Z07270:	SOB	R1, Z07130
	MOVB	#000001, @#Y00040
	MOV	#Z33056, @#Y00032
Z07306:	MOV	#000062, R1
Z07312:	MOV	R1, -(SP)
	CALL	Z33454
	CALL	Z25454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z20072
	CALL	Z05752
	CALL	Z22462
	CALL	Z24774
	CALL	Z22712
	CALL	Z21520
	CALL	Z22202
	CALL	Z20526
	TSTB	@#Y00016
	BNE	Z07452
	MOV	#Y00061, R3
	CALL	Z25554
Z07422:	CALL	Z25574
	MOVB	@#Y00040, R0
	BNE	Z07452
	INCB	R0
	MOVB	R0, @#Y00040
	MOV	#Z33056, @#Y00032
	BR	Z07422
Z07452:	TSTB	@#Y00035
	BEQ	Z07464
	CALL	Z34226
Z07464:	MOV	(SP)+, R1
	TSTB	@#Y00035
	BEQ	Z07504
	TSTB	R0
	BEQ	Z07504
	JMP	Z01774
Z07504:	SOB	R1, Z07312
	MOVB	#000001, @#Y00040
	MOV	#Z33070, R3
	MOV	#000106, R1
Z07524:	MOV	R1, -(SP)
	CALL	Z33454
	CALL	Z25454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z20072
	CALL	Z05752
	CALL	Z22462
	CALL	Z24774
	CALL	Z22712
	CALL	Z21520
	CALL	Z22202
	CALL	Z20526
	TSTB	@#Y00030
	BNE	Z07630
	CALL	Z25574
Z07630:	TSTB	@#Y00035
	BEQ	Z07642
	CALL	Z34226
Z07642:	MOV	(SP)+, R1
	TSTB	@#Y00035
	BEQ	Z07662
	TSTB	R0
	BEQ	Z07662
	JMP	Z01774
Z07662:	SOB	R1, Z07524
	DECB	@#Y00010
	BEQ	Z07676
	JMP	Z03352
Z07676:	BR	Z07720
;
Z07702:	.WORD	007776			; ???

; Нет больше жизней
Z07720:
	TSTB	@#Y00035		; демо-режим?
	BEQ	Z07736			; нет => переходим
	JMP	Z01774			; на начало игрового цикла
; Реальная игра, кончились жизни
Z07736:	CLR	R1
Z07740:	MOV	R1, -(SP)
	CALL	Z33454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z05752
	CALL	Z22050
	CALL	Z22462
	MOV	#<Y01106+153>, R1
	MOV	#Z25172, R3
	CALL	Z34366
	CALL	Z34226
	MOV	(SP)+, R1
	TSTB	R0
	BEQ	Z10034
	JMP	Z02316
Z10034:	DECB	R1
	BNE	Z07740
	JMP	Z01662
;
; Подпрограмма: Опускание человечка на верёвке
; возвращает C=1 если было нажатие
Z10044:
	MOV	#Z10452, R3
	MOVB	#000353, @#Y00042	; Положение человечка Y = -21
Z10066:	TSTB	@#Y00035		; демо-режим?
	BEQ	Z10106			; нет => переходим
	CALL	Z34226			; Клавиатура
	SEC
	BEQ	Z10106			; нет нажатой клавиши => переходим
	RETURN
Z10106:	CALL	Z33454			; Формирование реального экрана по образу
	CALL	Z25454			; Увеличить счётчики
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z10416			; Печать строки STAGE 1  READY
	CALL	Z24774			; Если демо, то GAME OVER
	CALL	Z22712
	CALL	Z20724
	CALL	Z21520			; Обработка счётчика Y00162
	CALL	Z11400
	MOVB	@#Y00042, R0		; Положение человечка Y
	ADD	#000003, R0		; на три строки ниже
	MOVB	R0, @#Y00174
	CALL	Z10354
	TSTB	@#Y00016
	BNE	Z10066
	MOVB	@#Y00042, R0		; Положение человечка Y
	CMPB	R0, #000007		; уже на крыше поезда?
	BEQ	Z10226			; да => переходим
	INCB	R0			; на строку ниже
	MOVB	R0, @#Y00042		; Сохраняем Положение человечка Y
	BR	Z10066
Z10226:	TSTB	@#Y00035		; демо-режим?
	BEQ	Z10246			; нет => переходим
	CALL	Z34226			; Клавиатура
	SEC
	BEQ	Z10246
	RETURN
Z10246:	CALL	Z33454			; Формирование реального экрана по образу
	CALL	Z25454
	CALL	Z22322			; Скопировать блок тайлов поезда на экран план
	CALL	Z24466			; Вывод индикаторной строки вверху экрана
	CALL	Z10416			; Печать строки STAGE 1  READY
	CALL	Z24774			; Если демо, то GAME OVER
	CALL	Z22712
	CALL	Z20724
	CALL	Z21520			; Обработка счётчика Y00162
	CALL	Z11400
	CALL	Z10354
	TSTB	@#Y00016
	BNE	Z10226
	MOVB	@#Y00174, R0
	BEQ	Z10346
	DECB	R0
	MOVB	R0, @#Y00174
	BR	Z10226
Z10346:
	RETURN
;
Z10354:	MOV	#<Y01106+21>, R1
	MOVB	@#Y00174, R0
	BNE	Z10370
	RETURN
Z10370:	BPL	Z10374
	RETURN
Z10374:	CLR	R2
	BISB	R0, R2
Z10402:	MOVB	#000342, (R1)
	ADD	#000040, R1
	SOB	R2, Z10402
	RETURN
;
; Подпрограмма: Печать строки STAGE 1  READY
Z10416:	MOV	#Z10432, R3		; Адрес строки STAGE 1  READY
Z10422:	MOV	#<Y01106+211>, R1
	JMP	Z34366			; Печать строки

Z10432:	.ASCIZ	/STAGE 1  READY@/
	.EVEN
;
Z10452:	.BYTE	024,000,036,000,000,011,001,260,020,010,020,170,002,014	; ???
;
Z10470:
	MOVB	#000036, @#Y00041	; X = 30.
	CLR	R0
	MOVB	R0, @#Y00051
	DECB	R0
	MOVB	R0, @#Y00050
Z10516:	TSTB	@#Y00035
	BEQ	Z10540
	CALL	Z34226
	TSTB	R0
	SEC
	BEQ	Z10540
	RETURN
Z10540:	CALL	Z33454
	CALL	Z25454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z20526
	CALL	Z11400
	CALL	Z22462
	CALL	Z10770
	CALL	Z24774
	CALL	Z22712
	CALL	Z21520
	CALL	Z22202
	TSTB	@#Y00016
	BNE	Z10516
	CALL	Z13224
	DECB	@#Y00041			; X = X - 1
	CMPB	@#Y00041, #000017		; X == 15. ?
	BNE	Z10516
	CLRB	@#Y00043
	MOV	#000100, R1
Z10666:	MOV	R1, -(SP)
	CALL	Z33454
	CALL	Z25454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z20526
	CALL	Z11400
	CALL	Z22462
	CALL	Z10770
	CALL	Z24774
	CALL	Z22712
	CALL	Z21520
	CALL	Z22202
	MOV	(SP)+, R1
	SOB	R1, Z10666
	TSTB	R0
	RETURN
;
Z10770:	MOV	#Z11000, R3			; Адрес строки STAGE 2 READY
	BR	Z10422
;
Z11000:	.ASCIZ	/STAGE 2  READY@/
	.EVEN
;
Z11020:	TSTB	@#Y00035
	BEQ	Z11030
	RETURN
Z11030:	MOVB	@#Y00004, @#Y00172
Z11036:	CALL	Z25454
	CALL	Z22322
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z22050
	CALL	Z11142
	CALL	Z24774
	CALL	Z33454
	MOV	#000062, R2
	MOV	#000012, R1
Z11112:		;CALL   	Z34300		; Звук и RETURN
	TSTB	@#Y00004
	BNE	Z11130
	RETURN	;JMP    	Z25570		; RETURN
Z11130:	DECB	@#Y00004
	INC	@#Y00000			; Score += 1
	BR	Z11036
;
Z11142:	MOV	#<Y01106+204>, R1
	MOV	#Z11206, R3			; Адрес строки BONUS POINTS
	CALL	Z34366
	MOV	#<Y01106+212>, R1
	MOVB	@#Y00172, R0
	CALL	Z34476
	MOV	#<Y01106+221>, R1
	MOVB	@#Y00172, R0
	JMP	Z34476
;
Z11206:	.ASCIZ	/BONUS    :10;   0 POINTS/
	.EVEN

Z11256:	MOV	#Z11272, R3
	MOV	#<Y01106+207>, R1
	JMP	Z34366
;
Z11272:	.ASCIZ	/STAGE 1 COMPLETE@/
	.EVEN

Z11350:	MOV	#<Y01106+600>, R1
	MOV	#000170, R0		; Тайл "переход между вагонами"
	MOV	#000003, R2
Z11364:	MOVB	R0, (R1)+
	MOVB	R0, (R1)
	ADD	#000037, R1
	SOB	R2, Z11364
	RETURN
;
; Подпрограмма
Z11400:	MOVB	@#Y00041, Z34564	; Положение человечка X сохраняем
	MOVB	@#Y00042, Z34565	; Положение человечка Y сохраняем
	CALL	Z33362
	TSTB	@#Y00044
	BNE	Z11576
	MOV	#Z11626, R3		; голова влево
	TSTB	@#Y00042
	BPL	Z11534
	CLRB	Z34565
	MOVB	@#Y00041, Z34564	; Положение человечка X сохраняем
	CALL	Z33362
	MOVB	@#Y00042, R0		; Положение человечка Y
	NEGB	R0
	BIC	#177400, R0
	CMPB	R0, #000002
	BHIS	Z11514
	ASLB	R0
	ASLB	R0
	ADD	R0, R3
	CALL	Z25402			; рисуем тайлы голова влево
	JMP	Z25402			; рисуем тайлы тело/ноги влево, и выходим
Z11514:	CMPB	R0, #000003
	BLO	Z11524
	RETURN
Z11524:	MOV	#Z11637, R3		; тело/ноги влево
	JMP	Z25402			; рисуем тайлы
Z11534:	MOVB	@#Y00051, @#Y01103
	CALL	Z25402			; рисуем тайлы
	MOVB	@#Y00051, @#Y01103
	TSTB	@#Y00043
	BNE	Z11566
	JMP	Z25402			; рисуем тайлы
Z11566:	MOV	#Z11644, R3		; тело/ноги влево прыжок
	JMP	Z25402			; рисуем тайлы
Z11576:	MOV	#Z11651, R3		; человечек лежит влево
	MOVB	@#Y00051, R0
	ASLB	R0
	ASLB	R0
	ASLB	R0
	ASLB	R0
	MOVB	R0, @#Y01103
	JMP	Z25402			; рисуем тайлы
; Набор записей для рисования человечка; каждая запись: <тайл, сдвиг>, тайл=0 - конец
Z11626:	.BYTE	200,001,201,037,220,001,221,037,000	; голова влево
Z11637:	.BYTE	240,001,241,000,000			; тело/ноги влево
Z11644:	.BYTE	260,001,261,000,000			; тело/ноги влево прыжок
Z11651:	.BYTE	204,001,205,001,206,001,207,035,224,001,225,001,226	; лежит влево
	.BYTE	001,227,000,000
	.EVEN
;
Z11672:	TSTB	@#Y00045
	BEQ	Z11704
	JMP	Z13276
Z11704:	TSTB	@#Y00047
	BEQ	Z11716
	JMP	Z13140
Z11716:	TSTB	@#Y00036
	BNE	Z11746
	MOVB	#000017, @#Y00041		; Положение человечка X = 15.
	MOV	#000007, R0
	MOVB	@#Y00006, R4
	DECB	R4
	BEQ	Z11764
Z11746:	MOV	#000020, R0
	TSTB	@#Y00046
	BEQ	Z11764
	MOV	#000014, R0
Z11764:	MOVB	R0, @#Y00042			; Сохраняем Положение человечка Y
	TSTB	@#Y00035			; демо-режим?
	BEQ	Z12056				; нет => читаем клавиатуру
	BR	Z12224				; нет => переходим
; Здесь мы получаем нажатый символ от клавиатуры
Z12056:
	CLR	R0
	TSTB	@#177660			; Нажата клавиша?
	BPL	2$				; нет символа => переходим
	MOV	@#177662, R0			; код нажатой клавиши
	BR	5$
; Нажатой клавиши нет -- рассматриваем что было нажато в прошлый раз
2$:	MOV	Z34224, R1		; какая клавиша была нажата прошлый раз?
	BEQ	5$			; никакая => переходим
	CMPB	R1, #067		; '7'?
	BNE	3$			; нет => переходим
	MOVB	#064, R0		; заменяем '7' на '4'
	BR	5$
3$:	CMPB	R1, #071		; '9'?
	BNE	4$			; нет => переходим
	MOVB	#066, R0		; заменяем '9' на '6'
	BR	5$
4$:	CMPB	R1, #061
	BLO	5$			; < '1' => переходим
	CMPB	R1, #067
	BHIS	5$			; >= '7' => переходим
	MOV	R1, R0			; повторяем ранее нажатую клавишу
5$:	MOV	R0, Z34224		; сохраняем нажатую клавишу
; Заменяем некоторые коды
	CMPB	R0, #010		; 'стрелка влево'?
	BNE	6$
	MOVB	#064, R0		; подменяем на '4'
	BR	16$
6$:	CMPB	R0, #031		; 'стрелка вправо'?
	BNE	7$
	MOVB	#066, R0		; подменяем на '6'
	BR	16$
7$:	CMPB	R0, #033		; 'стрелка вниз'?
	BNE	8$
	MOVB	#062, R0		; подменяем на '2'
	BR	16$
8$:	CMPB	R0, #121		; 'Q'?
	BNE	9$
	MOVB	#261, R0		; подменяем на '1' с выпуском змея
	BR	16$
9$:	CMPB	R0, #123		; 'S'?
	BNE	20$
	MOVB	#263, R0		; подменяем на '3' с выпуском змея
16$:	MOV	R0, Z34224
20$:
Z12224:	MOV	R0, -(SP)
	BIT	#000200, R0		; Стоит признак "выпустить змея"?
	BEQ	Z12240
	CALL	Z13556
Z12240:	MOV	(SP)+, R0
	BIC	#177600, R0
	SUB	#000061, R0		; Из символа '1'..'9' в число
	BIC	#177400, R0
	BEQ	Z12364			; 1
	DECB	R0			;
	BEQ	Z12400			; 2
	DECB	R0			;
	BEQ	Z12406			; 3
	CLRB	@#Y00044
	DECB	R0			;
	BEQ	Z12340			; 4
	SUB	#000002, R0		;
	BIC	#177400, R0		;
	BEQ	Z12344			; 6
	DECB	R0			;
	BEQ	Z12350			; 7
	DECB	R0			;
	BEQ	Z12354			; 8
	DECB	R0			;
	BEQ	Z12360			; 9
	CLRB	@#Y00043
	CLRB	@#Y00050		; DX = 0
	RETURN
Z12340:	BR	Z12542			; нажата 4 -- влево
Z12344:	BR	Z12572			; нажата 6 -- вправо
Z12350:	BR	Z12620			; нажата 7
Z12354:	BR	Z12636			; нажата 8
Z12360:	BR	Z12646			; нажата 9
; Нажата '1' -- влево-вниз
Z12364:	CLRB	@#Y00051
	MOVB	#000377, @#Y00050	; DX = -1 -- влево
	BR	Z12422
; Нажата '2' -- вниз
Z12400:	CLRB	@#Y00050		; DX = 0
	BR	Z12422
; Нажата '3' -- вправо-вниз
Z12406:	MOVB	#000001, @#Y00050	; DX = 1 -- вправо
	MOVB	#000002, @#Y00051
; Была нажата '1'/'2'/'3' -- вниз
Z12422:	TSTB	@#Y00046
	BNE	Z12524
	CLRB	@#Y00050		; DX = 0
	TSTB	@#Y00036
	BNE	Z12522
	TSTB	@#Y00044
	BNE	Z12470
	MOVB	@#Y00051, R1
	DECB	R1
	MOVB	@#Y00041, R0		; Положение человечка X
	ADD	R1, R0
	MOVB	R0, @#Y00041		; Сохраняем новое положение человечка
Z12470:	MOVB	#000001, @#Y00044
	MOVB	@#Y00006, R4
	MOV	#000010, R0		; 8.
	DECB	R4
	BEQ	Z12516
	MOV	#000021, R0		; 17.
Z12516:	MOVB	R0, @#Y00042		; Сохраняем Положение человечка Y
Z12522:	RETURN
Z12524:	CLRB	@#Y00046
	MOVB	#000001, @#Y00047
	BR	Z13140
; Нажата '4' -- влево
Z12542:	CLRB	@#Y00051
	MOVB	#000377, @#Y00050	; DX = -1 -- влево
	TSTB	@#Y00046
	BEQ	Z12566
	BR	Z12524
Z12566:	BR	Z12766
; Нажата '6' -- вправо
Z12572:	MOVB	#000001, @#Y00050	; DX = 1 -- вправо
	MOVB	#000002, @#Y00051
	TSTB	@#Y00046
	BNE	Z12524
	BR	Z13056
; Нажата '7' -- влево-вверх
Z12620:	CLRB	@#Y00051
	MOVB	#000377, @#Y00050	; DX = -1 -- влево
	BR	Z12662
; Нажата '8' -- вверх
Z12636:	CLRB	@#Y00050		; DX = 0
	BR	Z12662
; Нажата '9' -- вправо-вверх
Z12646:	MOVB	#000001, @#Y00050
	MOVB	#000002, @#Y00051
; Была нажата '7'/'8'/'9' -- вверх
Z12662:	TSTB	@#Y00046
	BEQ	Z12672
Z12670:	RETURN
Z12672:	MOVB	#000001, @#Y00045
	MOVB	#000001, @#Y00055
	MOVB	#000337, @#Y00056
	MOVB	#000040, @#Y00057
	MOVB	#000017, @#Y00060
	MOVB	#000012, @#Y00043
	MOV	#Z13510, R3
	MOVB	@#Y00006, R0
	DECB	R0
	BEQ	Z12756
	MOV	#Z13527, R3
Z12756:	MOV	R3, @#Y00052
	BR	Z13276
Z12766:	TSTB	@#Y00016
	BNE	Z12670
	MOVB	#000377, @#Y00050	; DX = -1 -- влево
	TSTB	@#Y00036
	BEQ	Z13046
	MOVB	@#Y00041, R0		; Положение человечка X
	CMPB	R0, #000003
	BHIS	Z13034
	MOVB	#000003, @#Y00041	; X = 3
	BR	Z13224
Z13034:	DECB	R0
	MOVB	R0, @#Y00041		; Положение человечка X
	BR	Z13224
Z13046:	CALL	Z20134
	BR	Z13224
Z13056:	TSTB	@#Y00016
	BNE	Z12670
	MOVB	#000001, @#Y00050	; DX = 1 -- вправо
	TSTB	@#Y00036
	BEQ	Z13132
	MOVB	@#Y00041, R0		; Положение человечка X
	CMPB	R0, #000035
	BLO	Z13122
	MOVB	#000035, @#Y00041	; X = 29.
	BR	Z13224
Z13122:	INCB	R0
	MOVB	R0, @#Y00041		; Положение человечка X
	BR	Z13224
Z13132:	CALL	Z20322
	BR	Z13224
;
Z13140:	TSTB	@#Y00016
	BEQ	Z13150
Z13146:	RETURN
Z13150:	MOVB	@#Y00042, R0		; Положение человечка Y
	CMPB	R0, #000020
	BEQ	Z13212
	INCB	R0
	MOVB	R0, @#Y00042		; Сохраняем Положение человечка Y
	MOVB	@#Y00050, R0		; берём DX
	BEQ	Z13146
	INCB	R0
	BNE	Z13206
	BR	Z12766
Z13206:	BR	Z13056
Z13212:	CLRB	@#Y00047
	CLRB	@#Y00043
	RETURN
;
Z13224:	TSTB	@#Y00050
	BEQ	Z13266
	TSTB	@#Y00045
	BNE	Z13266
	TSTB	@#Y00047
	BNE	Z13266
	MOVB	@#Y00043, R0
	MOV	#000020, R4
	XOR	R4, R0
	MOVB	R0, @#Y00043
	RETURN
Z13266:	MOVB	#000020, @#Y00043
	RETURN
;
Z13276:	MOVB	@#Y00006, R0
	DECB	R0
	BEQ	Z13416
	CMPB	@#Y00042, #000014	; Положение человечка Y = 12. ?
	BNE	Z13416
	MOV	#000372, R2
	MOV	#<Y00202+200>, R3
	MOVB	@#Y00041, R1		; Положение человечка X
	DECB	R1			; X = X - 1
	BIC	#177400, R1
	ADD	R1, R3
	MOVB	(R3), R0
	SUB	R2, R0
	BIC	#177400, R0
	BNE	Z13416
	INC	R3
	INC	R3
	INC	R3
	MOVB	(R3), R0
	SUB	R2, R0
	BIC	#177400, R0
	BNE	Z13416
	MOVB	R0, @#Y00045
	INCB	R0
	MOVB	R0, @#Y00046
	MOVB	#000014, @#Y00042	; Положение человечка Y = 12.
Z13414:	RETURN
Z13416:	MOV	@#Y00052, R3
	MOVB	(R3)+, R4
	MOVB	@#Y00042, R0		; Положение человечка Y
	ADD	R4, R0
	MOVB	R0, @#Y00042		; Сохраняем Положение человечка Y
	MOV	R3, @#Y00052
	MOVB	(R3), R0
	SUB	#000210, R0
	BIC	#177400, R0
	BNE	Z13466			; <> 210 => переходим
	MOVB	R0, @#Y00045
	MOVB	R0, @#Y00043
Z13466:	MOVB	@#Y00050, R0		; DX = 0 ?
	BEQ	Z13414			;   да => переходим
	INCB	R0			; DX = -1 ?
	BEQ	Z13504			;   да => переходим
	JMP	Z13056			; DX = 1, переходим
Z13504:	JMP	Z12766			; DX = -1, переходим
; прыжок на крыше
Z13510:	.BYTE	377,000,377,000,000,000,000,000,000,000,001,000,000,001,210
; прыжок в вагоне
Z13527:	.BYTE	377,000,377,000,377,000,377,000,000,000,000,000,000,000,001,000
	.BYTE	001,000,001,000,001,210
	.EVEN
;
Z13556:	CLRB	@#Y00044
	TSTB	@#Y00054
	BEQ	Z13672
	CMPB	@#Y00042, #000007	; Положение человечка Y = 7 ?
	BNE	Z13672			; нет => выходим
	TSTB	@#Y00065
	BEQ	Z13616
	CMPB	@#Y00063, #000040
	BLO	Z13672			; меньше => выходим
Z13616:	CLR	R0
	MOVB	R0, @#Y00054
	INCB	R0
	MOVB	R0, @#Y00065
	MOVB	R0, @#Y00071
	MOVB	#000050, @#Y00066
	CLRB	@#Y00067
	MOVB	#000021, @#Y00063
	MOVB	#000010, @#Y00064
	MOVB	#000360, @#Y00072	; = 240.
Z13672:	RETURN
;
Z13674:	TSTB	@#Y00035		; демо-режим?
	BNE	Z13672			; да => выходим
	TSTB	@#Y00055
	BEQ	Z13672			; =0 ? => выходим
	MOVB	@#Y00060, R0
	INCB	R0
	BNE	Z13726
	CLRB	@#Y00055
	RETURN
Z13726:	CLR	R1
	BISB	@#Y00057, R1
	BIT	#000200, R1
	BNE	Z13772
	CLR	R0
	BISB	@#Y00056, R0
	ADD	R1, R0
	BIT	#000400, R0
	BNE	Z14014
	MOVB	R0, @#Y00056
	BR	Z14020
Z13772:	MOVB	@#Y00056, R0
	ADD	R1, R0
	CMPB	R0, #000337
	BLO	Z14014
	MOVB	R0, @#Y00056
	BR	Z14020
Z14014:	NEGB	@#Y00057
Z14020:	TSTB	@#Y00016
	BNE	Z14032
	DECB	@#Y00060
Z14032:	RETURN
;
Z14034:	TSTB	@#Y00065
	BEQ	Z14032
	MOVB	@#Y00063, R0
	CMPB	R0, #000036
	BHIS	Z14032
	MOVB	R0, Z34564
	MOVB	@#Y00064, Z34565
	CALL	Z33362
	MOV	#Z14126, R3		; змей вправо
	MOVB	@#Y00067, R0
	CMPB	R0, #000003
	BLO	Z14114
	MOV	#000001, R0
Z14114:	ASL	R0
	MOVB	R0, @#Y01103
	JMP	Z25402			; рисуем тайлы
; Последовательность тайлов - змей вправо
Z14126:	.BYTE	312,001,313,037,332,001,333,000,000,000
;
Z14140:	MOVB	@#Y00065, R0
	BEQ	Z14264
	DECB	R0
	BNE	Z14274
	MOVB	@#Y00063, R0
Z14156:	BIC	#177400, R0
	CMPB	R0, #000040
	BLO	Z14176
	SUB	#000040, R0
	BR	Z14156
Z14176:	BIC	#177400, R0
	MOV	#Y00202, R3		; Адрес блока тайлов поезда
	ADD	R0, R3
	CMPB	(R3), #000040
	BNE	Z14224
	MOVB	#000002, @#Y00065
Z14224:	MOV	#Y00067, R3
	TSTB	@#Y00016
	BNE	Z14242
	CALL	Z25554
Z14242:	TSTB	@#Y00022		; Быстрый счётчик = 0 ?
	BNE	Z14264			; нет => переходим
	DECB	@#Y00066
	BNE	Z14266
	MOVB	#000002, @#Y00065
Z14264:	RETURN
Z14266:	INCB	@#Y00063
	RETURN
Z14274:	MOVB	@#Y00064, R0
	CMPB	R0, #000026
	BLO	Z14320
	CLRB	@#Y00065
	CLRB	@#Y00075
	RETURN
Z14320:	INCB	R0
	MOVB	R0, @#Y00064
	RETURN
;
Z14330:	TSTB	@#Y00035		; демо-режим?
	BNE	Z14416			; да => RETURN
	TSTB	@#Y00071
	BEQ	Z14416			; 0? => RETURN
	CLR	R2
	BISB	@#Y00072, R2		; оставляем младший байт
	MOV	#000005, R1
Z14360:		;CALL	Z34300			; Звук
	CLR	R0
	BISB	@#Y00072, R0
	SUB	#000036, R0		; R0 = R0 - 30.
	MOVB	R0, @#Y00072
	BIT	#177400, R0
	BEQ	Z14416			; 0? => RETURN
	CLRB	@#Y00071
Z14416:	RETURN
;
Z14420:	TSTB	@#Y00074
	BEQ	Z14416			; 0? => RETURN
	MOVB	@#Y00073, R0
	CMPB	R0, #000036
	BHIS	Z14416			; ? => RETURN
	MOVB	R0, Z34564
	MOVB	#000005, Z34565
	CALL	Z33362
	MOV	#Z14126, R3		; змей вправо
	MOVB	@#Y00076, R0
	CMPB	R0, #000003
	BLO	Z14500
	MOV	#000001, R0
Z14500:	ASL	R0
	ADD	#000040, R0
	MOVB	R0, @#Y01103
	JMP	Z25402			; рисуем тайлы
;
Z14516:	TSTB	@#Y00074
	BEQ	Z14622
	MOV	#Y00076, R3
	TSTB	@#Y00016
	BNE	Z14542
	CALL	Z25554
Z14542:	MOVB	@#Y00050, R0		; берём DX
	BEQ	Z14570			; DX = 0? => переходим
	DECB	R0
	BEQ	Z14562
	MOVB	@#Y00015, R0
	BR	Z14574
Z14562:	MOVB	@#Y00020, R0
	BR	Z14574
Z14570:	MOVB	@#Y00016, R0
Z14574:	TSTB	R0
	BNE	Z14620
	INCB	@#Y00073
	CMPB	@#Y00073, #000100
	BLO	Z14620
	CLR	@#Y00074
Z14620:	RETURN
Z14622:	MOVB	@#Y00075, R0
	SUB	#000002, R0
	MOVB	R0, @#Y00075
	TSTB	R0
	BMI	Z14662
	MOVB	@#Y00065, R0
	BNE	Z14662
	MOVB	R0, @#Y00073
	INC	R0
	MOVB	R0, @#Y00074
Z14662:	RETURN
;
Z14664:	TSTB	@#Y00036
	BNE	Z14704
	MOV	#Y00100, R5		; Адрес 4-х записей объектов
Z14676:	MOVB	(R5), R0
	INCB	R0
	BNE	Z14706
Z14704:	RETURN
Z14706:	TSTB	000005(R5)
	BEQ	Z14756
	MOVB	000006(R5), R0
	CMPB	R0, #000040
	BHIS	Z14756
	MOVB	R0, Z34564
	MOVB	000007(R5), Z34565
	CALL	Z33362
	MOVB	@#Y00006, R0
	ADD	#000347, R0
	MOVB	R0, (R1)
Z14756:	TSTB	(R5)
	BNE	Z14770
Z14762:	ADD	#000010, R5
	BR	Z14676
Z14770:	MOVB	000002(R5), R0
	CMPB	R0, #000036
	BHIS	Z14762
	MOVB	R0, Z34564
	MOVB	000003(R5), Z34565
	CALL	Z33362
	MOVB	000004(R5), R0
	CMPB	R0, #000010
	BEQ	Z15234
	MOV	#Z15250, R3
	CLR	R0
	BISB	000004(R5), R0
	MOV	R0, R2
	ASL	R2
	ADD	R0, R2
	ASL	R2
	ADD	R2, R3
	CLR	R4
	BISB	000001(R5), R4
	MOV	#000037, R2
	MOVB	(R5), R0
	DECB	R0
	BEQ	Z15106
	MOV	#000003, R4
Z15106:	MOVB	(R3)+, (R1)+
	MOVB	(R3)+, (R1)
	ADD	R2, R1
	SOB	R4, Z15106
	CMPB	(R5), #000003
	BNE	Z14762
	CMPB	000001(R5), #000004
	BHIS	Z14762
	MOVB	000002(R5), Z34564
	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z15172
	INCB	Z34564
	INCB	Z34564
	MOVB	#000010, Z34565
	BR	Z15204
Z15172:	DECB	Z34564
	MOVB	#000021, Z34565
Z15204:	CALL	Z33362
	MOVB	@#Y00006, R0
	BIC	#177400, R0
	SUB	#000352, R0
	NEGB	R0
	MOVB	R0, (R1)
	BR	Z14762
Z15234:	MOV	#Z15330, R3		; упавший гангстер
	CALL	Z25402			; рисуем тайлы
	BR	Z14762
;
Z15250:	.BYTE	216,217,210,211,230,231, 216,217,212,213,232,233
	.BYTE	216,217,214,215,234,235, 216,217,212,213,232,233
	.BYTE	216,217,250,251,270,271, 216,217,252,253,272,273
	.BYTE	254,255,274,275,236,237, 256,257,276,277,236,237
; Последовательность тайлов - упавший гангстер (тайлы из доп.набора)
Z15330:	.BYTE	254,001,255,001,256,036,274,001,275,001,276,000,000,000
;
Z15346:	TSTB	@#Y00036
	BNE	Z15470
	CLRB	@#Y00141
	MOV	#Y00100, R5		; Адрес 4-х записей объектов
Z15364:	MOVB	(R5), R0
	CMPB	R0, #000377
	BEQ	Z15414
	DECB	R0
	BEQ	Z15406
	ADD	#000010, R5
	BR	Z15364
Z15406:	MOVB	#000001, @#Y00141
Z15414:	MOV	#Y00100, R5		; Адрес 4-х записей объектов
Z15420:	MOVB	(R5), R0
	INCB	R0
	BEQ	Z15470
	TSTB	000005(R5)
	BEQ	Z15512
	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z15472
	DECB	000006(R5)
	MOVB	000006(R5), R0
	CMPB	R0, #000370
	BLO	Z15512
	CLRB	000005(R5)
	BR	Z15512
Z15470:	RETURN
Z15472:	INCB	000006(R5)
	CMPB	000006(R5), #000100
	BLO	Z15512
	CLRB	000005(R5)
Z15512:	TSTB	@#Y00016
	BNE	Z15572
	MOVB	(R5), R0
	DECB	R0
	BEQ	Z16040
	DECB	R0
	BEQ	Z15552
	DECB	R0
	BEQ	Z15556
	DECB	R0
	BEQ	Z15562
	BR	Z15602
Z15552:	JMP	Z16212
Z15556:	JMP	Z16444
Z15562:	JMP	Z16614
Z15566:	JMP	Z16720
Z15572:	ADD	#000010, R5
	BR	Z15420
Z15602:	TSTB	@#Y00034
	BNE	Z15572
	DECB	000001(R5)
	BNE	Z15572
	TSTB	@#Y00141
	BNE	Z15566
	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z15760
	TSTB	@#Y00155
	BEQ	Z15566
	MOV	#Y00202, R3		; Адрес блока тайлов поезда
	MOV	#000040, R1		; 32.
	MOV	#000040, R0		; пустой тайл
Z15656:	CMPB	R0, (R3)+
	BEQ	Z15666
	SOB	R1, Z15656
	BR	Z15670
Z15666:	DEC	R1
Z15670:	MOV	#000037, R0
	SUB	R1, R0
Z15676:	CMPB	R0, #000021
	BHIS	Z15716
	ADD	#000040, R0
	BIC	#177400, R0
	BR	Z15676
Z15716:	MOVB	#000001, (R5)
	MOVB	#000001, 000001(R5)
	MOVB	R0, 000002(R5)
	MOVB	#000013, 000003(R5)
	CLRB	000004(R5)
	MOVB	#000001, @#Y00141
	BR	Z15572
Z15760:	MOVB	#000002, (R5)
	MOV	#000012, R0
	MOVB	@#Y00007, R4		; Stage
	DECB	R4
	BEQ	Z16004
	MOV	#000005, R0
Z16004:	MOVB	R0, 000001(R5)
	CLRB	000002(R5)
	MOVB	#000020, 000003(R5)
	MOVB	#000001, 000004(R5)
	BR	Z15572
Z16034:	JMP	Z16720
Z16040:	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z16034
	MOVB	#000001, @#Y00141
	CMPB	000002(R5), #000100
	BHIS	Z16034
	CMPB	000001(R5), #000003
	BEQ	Z16112
	DECB	000003(R5)
	INCB	000001(R5)
	BR	Z15572
Z16112:	CMPB	000003(R5), #000006
	BEQ	Z16132
	DECB	000003(R5)
	BR	Z15572
Z16132:	MOVB	#000002, (R5)
	MOV	#000012, R0
	MOVB	@#Y00007, R4		; Stage
	DECB	R4
	BEQ	Z16156
	MOV	#000005, R0
Z16156:	MOVB	R0, 000001(R5)
	DECB	000002(R5)
	DECB	000002(R5)
	MOVB	#000007, 000003(R5)
	MOVB	#000001, 000004(R5)
Z16206:	JMP	Z15572
Z16212:	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z16350
	CMPB	000002(R5), #000017
	BLO	Z16206
	CMPB	000002(R5), #000100
	BLO	Z16246
Z16242:	JMP	Z16720
Z16246:	TSTB	@#Y00034
	BNE	Z16206
	DECB	000001(R5)
	BNE	Z16304
	MOVB	#000003, (R5)
	CLRB	000001(R5)
	MOVB	#000005, 000004(R5)
	JMP	Z15572
Z16304:	INCB	000004(R5)
	CMPB	000004(R5), #000004
	BLO	Z16324
	CLRB	000004(R5)
Z16324:	DECB	000002(R5)
	CMPB	000002(R5), #000036
	BLO	Z16344
	DECB	000002(R5)
Z16344:	JMP	Z15572
Z16350:	CMPB	000002(R5), #000100
	BHIS	Z16242
	DECB	000001(R5)
	BNE	Z16410
	MOVB	#000003, (R5)
	CLRB	000001(R5)
	MOVB	#000005, 000004(R5)
	JMP	Z15572
Z16410:	INCB	000004(R5)
	CMPB	000004(R5), #000004
	BLO	Z16430
	CLRB	000004(R5)
Z16430:	INCB	000002(R5)
	JMP	Z15572
Z16444:	CMPB	000002(R5), #000100
	BHIS	Z16720
	INCB	000001(R5)
	MOVB	000001(R5), R0
	CMPB	R0, #000010
	BLO	Z16510
	MOVB	#000002, (R5)
	MOVB	#000040, 000001(R5)
Z16504:	JMP	Z15572
Z16510:	CMPB	R0, #000004
	BNE	Z16504
	MOVB	#000004, 000004(R5)
	MOVB	#000001, 000005(R5)
	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z16566
	MOV	000002(R5), R0
	DECB	R0
	MOVB	R0, 000006(R5)
	MOVB	#000010, 000007(R5)
	JMP	Z15572
Z16566:	MOVB	000002(R5), R0
	ADD	#000002, R0
	MOVB	R0, 000006(R5)
	MOVB	#000021, 000007(R5)
	JMP	Z15572
Z16614:	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z16712
	INCB	000002(R5)
	INCB	000003(R5)
	MOVB	000004(R5), R0
	SUB	#000006, R0
	BIC	#177400, R0
	MOV	#000001, R4
	XOR	R4, R0
	ADD	#000006, R0
	MOVB	R0, 000004(R5)
	CMPB	000003(R5), #000026
	BLO	Z16504
	CLRB	(R5)
	MOVB	#000024, 000001(R5)
	JMP	Z15572
Z16712:	DECB	000001(R5)
	BNE	Z16504
Z16720:	CLRB	(R5)
	CLR	R0
	BISB	@#Y00006, R0
	CMPB	R0, #000004
	BLO	Z16744
	MOV	#000003, R0
Z16744:	ASL	R0
	ASL	R0
	ASL	R0
	MOVB	R0, 000001(R5)
	JMP	Z15572
Z16762:	MOVB	@#Y00144, R1
	MOVB	@#Y00143, R0
	ADD	R1, R0
	MOVB	R0, @#Y01102
	MOVB	@#Y00142, Z34564
	MOVB	#000015, Z34565
	MOV	#Z17150, R3
	CALL	Z17054
	INCB	Z34564
	CALL	Z17054
	DECB	Z34564
	INCB	Z34565
	CALL	Z17054
	INCB	Z34564
;
Z17054:	MOV	Z34564, -(SP)
	MOVB	Z34564, R0
Z17064:	BIC	#177400, R0
	CMPB	R0, #000040
	BLO	Z17120
	CMPB	R0, #000200
	BHIS	Z17112
	SUB	#000040, R0
	BR	Z17064
Z17112:	ADD	#000040, R0
	BR	Z17064
Z17120:	MOVB	R0, Z34564
	CALL	Z33362
	MOVB	@#Y01102, R0
	MOVB	(R3)+, R4
	ADD	R4, R0
	MOVB	R0, (R1)
	MOV	(SP)+, Z34564
	RETURN
;
Z17150:	.BYTE	314,315,334,335

Z17154:	TSTB	@#Y00016
	BNE	Z17200
	MOV	#000002, R4
	MOVB	@#Y00143, R0
	XOR	R4, R0
	MOVB	R0, @#Y00143
Z17200:	TSTB	@#Y00034
	BNE	Z17404
	MOVB	@#Y00007, R1
	MOVB	@#Y00016, R0
	DECB	R1
	BEQ	Z17234
	MOVB	@#Y00015, R0
	DECB	R1
	BEQ	Z17234
	BR	Z17240
Z17234:	TSTB	R0
	BNE	Z17404
Z17240:	MOVB	@#Y00145, Z34570
	MOVB	@#Y00146, Z34571
	MOV	Z34570, R3
	TSTB	@#Y00144
	BNE	Z17272
	MOVB	(R3)+, R1
	BR	Z17276
Z17272:	MOVB	(R3)+, R1
	NEGB	R1
Z17276:	BIC	#177400, R1
	MOVB	@#Y00142, R0
	ADD	R1, R0
	MOVB	R0, @#Y00142
	MOVB	(R3), R0
	MOV	R3, Z34570
	MOVB	Z34570, @#Y00145
	MOVB	Z34571, @#Y00146
	CMPB	R0, #000210
	BNE	Z17404
	MOVB	@#Y00144, R0
	MOV	#000040, R4
	XOR	R4, R0
	MOVB	R0, @#Y00144
	MOV	#Z17406, Z34570
	MOVB	Z34570, @#Y00145
	MOVB	Z34571, @#Y00146
Z17404:	RETURN
;
Z17406:	.BYTE	000,000,000,000,001,001,377,001,001,000,001,001,001,000,000,000
	.BYTE	377,000,001,377,377,000,000,001,001,001,001,001,377,377,001,000
	.BYTE	000,377,000,000,000,001,001,001,000,000,000,001,001,001,001,001
	.BYTE	001,377,001,000,000,001,001,001,000,377,000,000,000,001,001,001
	.BYTE	000,000,001,001,001,000,377,000,000,001,001,000,000,000,000,210
;
Z17526:	TSTB	@#Y00036
	BEQ	Z17634
	MOVB	@#Y00147, Z34564
	MOVB	@#Y00150, Z34565
	CALL	Z33362
	MOV	#Z17636, R3
	CALL	Z25402				; рисуем тайлы
	TSTB	@#Y00035
	BNE	Z17634
	MOV	#000100, R2
	MOV	#000012, R1
	MOVB	@#Y00153, R0
	CMPB	R0, #000017
	BNE	Z17620
Z17614:		;CALL   	Z34300		; Звук и RETURN
Z17620:	MOVB	@#Y00153, R0
	BEQ	Z17634
	DECB	R0
	MOVB	R0, @#Y00153
Z17634:	RETURN
; Последовательность тайлов - ворона либо кружок с плюсом - зависит от набора тайлов
Z17636:	.BYTE	312,001,313,037,332,001,333,000,000,000
;
Z17650:	TSTB	@#Y00036
	BEQ	Z20034
	MOVB	@#Y00007, R1
	MOVB	@#Y00016, R0
	DECB	R1
	BEQ	Z17676
	MOVB	@#Y00015, R0
Z17676:	TSTB	R0
	BNE	Z20034
	MOVB	@#Y00151, R1
	MOVB	@#Y00147, R0
	ADD	R1, R0
	BIC	#177400, R0
	MOVB	R0, @#Y00147
	CMPB	R0, #000003
	BEQ	Z17742
	CMPB	R0, #000035
	BEQ	Z17760
	BR	Z17776
Z17742:	MOVB	#000001, @#Y00151
	MOVB	#000017, @#Y00153
	BR	Z17776
Z17760:	MOVB	#000377, @#Y00151
	MOVB	#000017, @#Y00153
	BR	Z17776
Z17776:	MOVB	@#Y00152, R1
	MOVB	@#Y00150, R0
	ADD	R1, R0
	BIC	#177400, R0
	MOVB	R0, @#Y00150
	CMPB	R0, #000013
	BEQ	Z20036
	CMPB	R0, #000021
	BEQ	Z20054
Z20034:	RETURN
Z20036:	MOVB	#000001, @#Y00152
	MOVB	#000017, @#Y00153
	RETURN
Z20054:	MOVB	#000377, @#Y00152
	MOVB	#000017, @#Y00153
Z20070:	RETURN
Z20072:	TSTB	@#Y00036
	BEQ	Z20070
	TSTB	@#Y00037
	BNE	Z20070
	MOV	#<Y01106+617>, R1
	MOV	#Z20122, R3			; спрайт ключа
	JMP	Z25402				; рисуем тайлы
; Спрайт ключа
Z20122:	.BYTE	353,001,257,037,373,001,277,000,000,000
;
; Подпрограмма: Скроллирование поезда при движении человечка
Z20134:	MOV	#<Y00202+36>, R3
	MOV	#000015, R4			; .13 строк
Z20144:	MOV	R3, R2
	INC	R2
	MOVB	(R2), R0
	MOV	#000037, R1			; Счётчик = 31.
	INC	R2
	INC	R3
Z20162:	MOVB	-(R3), -(R2)			; копируем
	SOB	R1, Z20162			; повторяем
	MOVB	R0, -(R2)
	ADD	#000076, R3
	SOB	R4, Z20144			; повторяем
	MOV	#Y00100, R3			; Адрес 4-х записей объектов
Z20202:	MOVB	(R3), R0
	INCB	R0
	BEQ	Z20240
	DECB	R0
	BEQ	Z20220
	INCB	000002(R3)
Z20220:	TSTB	000005(R3)
	BEQ	Z20232
	INCB	000006(R3)
Z20232:	ADD	#000010, R3
	BR	Z20202
Z20240:	INCB	@#Y00063
	INCB	@#Y00142
	MOVB	@#Y00154, R0
	INCB	R0
	MOVB	R0, @#Y00154
	SUB	#000040, R0
	BIC	#177400, R0
	BNE	Z20320
	MOVB	R0, @#Y00154
	INCB	@#Y00155
	MOVB	@#Y00142, R0
	SUB	#000040, R0
	MOVB	R0, @#Y00142
Z20320:	RETURN
;
Z20322:	MOVB	@#Y00155, R0
	BISB	@#Y00154, R0
	BEQ	Z20320
	MOV	#<Y00202+1>, R3
	MOV	#Y00202, R2		; Адрес блока тайлов поезда
	MOV	#000015, R4		; 13. строк
Z20350:	MOVB	(R2), R0
	MOV	#000037, R1		; 31.
Z20356:	MOVB	(R3)+, (R2)+
	SOB	R1, Z20356
	MOVB	R0, (R2)+
	INC	R3
	SOB	R4, Z20350
	MOV	#Y00100, R3		; Адрес 4-х записей объектов
Z20374:	MOVB	(R3), R0
	INCB	R0
	BEQ	Z20432
	DECB	R0
	BEQ	Z20412
	DECB	000002(R3)
Z20412:	TSTB	000005(R3)
	BEQ	Z20424
	DECB	000006(R3)
Z20424:	ADD	#000010, R3
	BR	Z20374
Z20432:	DECB	@#Y00063
	DECB	@#Y00142
	MOVB	@#Y00154, R0
	DECB	R0
	MOVB	R0, @#Y00154
	INCB	R0
	BNE	Z20516
	MOVB	@#Y00155, R0
	BEQ	Z20520
	DECB	R0
	MOVB	R0, @#Y00155
	MOVB	#000037, @#Y00154
	MOVB	@#Y00142, R0
	ADD	#000040, R0
	MOVB	R0, @#Y00142
Z20516:	RETURN
Z20520:	CLRB	@#Y00154
Z20524:	RETURN
;
Z20526:	INC	@#Y00156
	MOV	@#Y00156, R3
	MOVB	(R3), R0
	CMPB	R0, #000377
	BNE	Z20556
	MOV	#Z20616, R3
	MOV	R3, @#Y00156
Z20556:	TSTB	R0
	BEQ	Z20524
	MOVB	@#Y00155, R0
	BISB	@#Y00154, R0
	BEQ	Z20524
	TSTB	@#Y00035		; демо-режим?
	BNE	Z20524
	MOV	#000702, R2
	MOV	#000002, R1
	RETURN	;JMP	Z34300		; Звук и RETURN
;
Z20616:	.BYTE	001,000,001,000,000,001,000,001,000,000,000,000,000,000,000,000
	.BYTE	000,000,000,000,000,377
;
Z20644:	MOV	#Z27040, R3		; Адрес блока тайлов поезда, начальное состояние
	MOV	#Y00202, R2		; Адрес блока тайлов поезда
	MOV	#000640, R1		; 416. -- 13 строк
Z20660:	MOVB	(R3)+, (R2)+		;   копируем
	SOB	R1, Z20660		; повторяем
	CLR	R0
	BISB	@#Y00006, R0
	DECB	R0
	BNE	Z20702
	RETURN
Z20702:	MOV	#Z27700, R3
	MOV	#<Y00202+40>, R2
	MOV	#000400, R1		; 256.
Z20716:	MOVB	(R3)+, (R2)+
	SOB	R1, Z20716
	RETURN
;
; Подпрограмма: Скроллирующийся фон
Z20724:	MOV	#<Y01106+400>, R1
	MOV	@#Y00162, R3
	ADD	#Z21126, R3
	MOV	#000040, R0
	MOV	R0, R2
Z20746:	CMPB	R0, (R3)
	BEQ	Z20754
	MOVB	(R3), (R1)
Z20754:	INC	R3
	INC	R1
	SOB	R2, Z20746
	MOV	@#Y00162, R3
	ADD	#Z21323, R3
	MOV	#000040, R0
	MOV	R0, R2
Z21000:	CMPB	R0, (R3)
	BEQ	Z21012
	CMPB	R0, (R1)
	BNE	Z21012
	MOVB	(R3), (R1)
Z21012:	INC	R3
	INC	R1
	SOB	R2, Z21000
	MOV	R1, -(SP)
	MOV	@#Y00162, R3
	ADD	#Z21323, R3
	MOV	#000041, R1
	MOV	#000370, R0
Z21042:	CMPB	R0, (R3)+
	BEQ	Z21054
	SOB	R1, Z21042
	MOV	(SP)+, R1
	RETURN
Z21054:	DEC	R1
	MOV	R1, R2
	MOV	(SP)+, R1
	MOV	#000040, R3
	SUB	R2, R3
	ADD	#177640, R3
	ADD	R3, R1
	MOV	#000020, R2
Z21102:	CMPB	(R1), #000040
	BNE	Z21114
	MOVB	#000370, (R1)
Z21114:	ADD	#000040, R1
	SOB	R2, Z21102
	RETURN
	.WORD	0
; Данные для счётчика Y00162 -- тайлы скроллируемого фона
Z21126:	.BYTE	370,360,360,362,362,362,364,364,364,364,366,366,366,366,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,366,366,366,366,364,364,364,364
	.BYTE	362,362,362,360,360,370,360,360,362,362,362,364,364,364,364,366
	.BYTE	366,366,366,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040
Z21323:	.BYTE	370,040,040,040,040,040,040,040,040,040,040,040,040,040,360,360
	.BYTE	360,360,360,360,362,362,362,362,362,362,364,364,364,364,364,364
	.BYTE	364,364,364,366,366,366,366,366,366,366,366,366,366,366,366,366
	.BYTE	366,366,366,364,364,364,364,364,364,364,364,364,362,362,362,362
	.BYTE	362,362,360,360,360,360,360,360,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,370,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,360,360,360,360,360,360,362,362,362,362,362,362,364
	.BYTE	364,364,364,364,364,364,364,364,366,366,366,366,366

; Подпрограмма: Обработка счётчика Y00162
Z21520:	SUB	#000002, @#Y00162
	MOV	@#Y00162, R3
	ADD	#Z21126, R3
	TSTB	(R3)
	BNE	Z21550
	MOV	#000124, @#Y00162
Z21550:	RETURN
;
Z21552:	TSTB	@#Y00164
	BNE	Z21564
	BR	Z21760
Z21564:	MOVB	@#Y00165, R0
	CMPB	R0, #000040
	BHIS	Z22000
	MOVB	R0, Z34564
	MOVB	#000006, Z34565
	MOV	#000020, R2		; Счётчик = 16.
	CALL	Z33362
	MOV	R1, -(SP)		; сохраняем R1
Z21622:	MOVB	(R1), R0		; Начало цикла: берём тайл с экрана
	CMPB	R0, #000040		;   пустой?
	BEQ	Z21646			;   да => переходим
	CMPB	R0, #000371		;   >= 371? (тайл балки)
	BHIS	Z21652			;   да => пропускаем
	CMPB	R0, #000360		;   < 360 (360..367 -- тайлы провода)
	BLO	Z21652			;   да => пропускаем
Z21646:	MOVB	#000371, (R1)		;   записываем тайл балки
Z21652:	ADD	#000040, R1		;   на строку ниже
	SOB	R2, Z21622		; Повторяем
	MOV	(SP)+, R1		; восстанавливаем R1
	CLR	R2
	BISB	@#Y00165, R2
	ASR	R2
	ASR	R2
	SUB	#000004, R2
	TSTB	R2
	BEQ	Z22000
	BMI	Z21716
	MOV	#000001, R3
	BR	Z21724
Z21716:	MOV	#177777, R3
	NEGB	R2
Z21724:	BIC	#177400, R2
	MOVB	@#Y00165, R0
Z21734:	BIC	#177400, R0
	CMPB	R0, #000040
	BHIS	Z21752
	MOVB	#000371, (R1)
Z21752:	ADD	R3, R1
	ADD	R3, R0
	SOB	R2, Z21734
Z21760:	TSTB	@#Y00167
	BEQ	Z21770
Z21766:	RETURN
Z21770:	CMPB	@#Y00166, #000024
	BHIS	Z21766
Z22000:	CMPB	@#Y00022, #000003
	BHIS	Z21766
	MOVB	@#Y00006, R0
	DECB	R0
	BNE	Z21766
	TSTB	@#Y00035		; демо-режим?
	BNE	Z21766
	TSTB	@#Y00034
	BNE	Z21766
	MOV	#<Y01106+116>, R1	; Адрес в экран план
	MOV	#Z22160, R3		; Спрайт транспоранта CAUTION
	CALL	Z25402			; рисуем тайлы; NOTE: Отсутствует в порте на МС0515, но очевидно нужно
	JMP	Z34366			; Печать строки
;
Z22050:	TSTB	@#Y00164
	BEQ	Z22156
	CLR	R0
	BISB	@#Y00165, R0
	MOV	R0, Z34560
	ASR	R0
	ASR	R0
	SUB	#000004, R0
	ADD	Z34560, R0
	BIC	#177400, R0
	CMPB	R0, #000040
	BHIS	Z22156
	MOVB	R0, Z34564
	MOVB	#000006, Z34565
	MOV	#000022, R2
	CALL	Z33362
	MOV	#000371, R0
Z22146:	MOVB	R0, (R1)
	ADD	#000040, R1
	SOB	R2, Z22146
Z22156:	RETURN
; Спрайт транспоранта CAUTION - последовательность тайлов и сдвигов
Z22160:	.BYTE	162,001,163,037,164,001,165,002,000
	.ASCIZ	/CAUTION@/
;
Z22202:	TSTB	@#Y00164
	BNE	Z22234
	DEC	@#Y00166
	BNE	Z22232
	MOVB	#000001, @#Y00164
	MOVB	#000001, @#Y00165
Z22232:	RETURN
Z22234:	MOVB	@#Y00165, R0
	ADD	#000002, R0
	MOVB	R0, @#Y00165
	CMPB	R0, #000040
	BLO	Z22232
	CLRB	@#Y00164
	MOV	@#Y00170, R3
Z22266:	MOVB	(R3)+, Z34566
	MOVB	(R3)+, Z34567
	MOV	Z34566, R2
	MOV	R3, @#Y00170
	MOV	R2, @#Y00166
	BNE	Z22232
	MOV	#Z31240, R3
	BR	Z22266
;
; Подпрограмма: Скопировать блок тайлов поезда в 448. байт
Z22322:	MOV	#Y00202, R3		; Адрес блока тайлов поезда
	MOV	#<Y01106+500>, R2	; Экран план, 10.-я строка
	MOV	#000700, R1		; 448. = 14 строк по 32 тайла
Z22336:	MOVB	(R3)+, (R2)+		;   копируем
	SOB	R1, Z22336		; повторяем
	TSTB	@#Y00155
	BEQ	Z22352
	RETURN
Z22352:	CLR	R0
	BISB	@#Y00154, R0
	MOV	#000040, R2
	SUB	R0, R2
	BIC	#177400, R2
	MOVB	R0, Z34564
	MOVB	#000012, Z34565
	CALL	Z33362
	MOV	#000014, R3
Z22416:	MOV	#000040, R0
	MOV	R2, R4
Z22424:	MOVB	R0, (R1)+
	SOB	R4, Z22424
	CLR	R4
	BISB	@#Y00154, R4
	BEQ	Z22444
	ADD	R4, R1
Z22444:	SOB	R3, Z22416
	MOV	#000154, R0		; Номер тайла для рельса
	MOV	R2, R4
Z22454:	MOVB	R0, (R1)+
	SOB	R4, Z22454
	RETURN
;
Z22462:	MOVB	@#Y00006, R0
	DECB	R0
	BEQ	Z22614
	TSTB	@#Y00155
	BEQ	Z22614
	MOVB	@#Y00154, Z34564
	DECB	Z34564
	MOVB	#000014, Z34565
	MOV	#000347, R2
	MOV	#000007, R4
	CALL	Z22616
	INCB	Z34564
	MOV	#000170, R2		; Тайл "переход между вагонами"
	MOV	#000007, R4
	CALL	Z22616
	INCB	Z34564
	MOV	#000170, R2		; Тайл "переход между вагонами"
	MOV	#000007, R4
	CALL	Z22616
	INCB	Z34564
	MOV	#000347, R2
	MOV	#000007, R4
	BR	Z22616			; call and return
Z22614:	RETURN
Z22616:	MOV	Z34564, -(SP)
	MOVB	Z34564, R0
Z22626:	BIC	#177400, R0
	CMPB	R0, #000040
	BLO	Z22662
	CMPB	R0, #000200
	BHIS	Z22654
	SUB	#000040, R0
	BR	Z22626
Z22654:	ADD	#000040, R0
	BR	Z22626
Z22662:	MOVB	R0, Z34564
	CALL	Z33362
Z22672:	MOVB	R2, (R1)
	ADD	#000040, R1
	DECB	R4
	BNE	Z22672
	MOV	(SP)+, Z34564
	RETURN
;
; Подрограмма: Скроллинг насыпи под поездом
Z22712:	MOVB	@#<Y00202+672>, Z34562	; MOVB @#101074, 034562
	MOVB	@#<Y00202+673>, R0	; MOVB @#101075, R0
	MOV	#<Y00202+676>, R3	; MOV  #101100, R3
	MOV	#Y01102, R2		; MOV  #101102, R2
	MOV	#000036, R1		; Счётчик = 30.
Z22740:	MOVB	-(R3), -(R2)		;   копируем
	SOB	R1, Z22740		; повторяем
	MOVB	R0, -(R2)
	MOVB	Z34562, -(R2)
	RETURN
;
; Подпрограмма: Уменьшаем оставшееся время
Z22754:	TSTB	@#Y00026		; Быстрый счётчик времени = 0 ?
	BEQ	Z22764			; да => переходим
	RETURN				;
Z22764:	TSTB	@#Y00004		; Время закончилось?
	BNE	Z22774			; нет => переходим
	RETURN				;
Z22774:	DECB	@#Y00004		; Уменьшаем счётчик времени
	RETURN				;
;
Z23002:	TSTB	@#Y00034
	BEQ	Z23012
	RETURN
Z23012:	TSTB	@#Y00004
	BNE	Z23030
	MOVB	#000377, @#Y00034
	RETURN
Z23030:	CMPB	@#Y00042, #000007	; Положение человечка Y = 7 ?
	BNE	Z23070
	MOV	#<Y01106+517>, R1
	MOV	#000040, R2
	CMPB	(R1)+, R2
	BNE	Z23140
	CMPB	(R1), R2
	BNE	Z23140
	MOVB	#000001, @#Y00034
	RETURN
Z23070:	CMPB	@#Y00042, #000007	; Положение человечка Y = 7 ?
	BHIS	Z23140
	TSTB	@#Y00164
	BEQ	Z23140
	MOVB	@#Y00165, R0
	SUB	#000017, R0
	BIC	#177400, R0
	CMPB	R0, #000002
	BHIS	Z23140
	MOVB	#000002, @#Y00034
	RETURN
Z23140:	MOV	#Y00100, R5
	MOV	#000010, R2
Z23150:	CLR	R0
	BISB	(R5), R0
	CMPB	R0, #000377
	BNE	Z23170
	BR	Z23436
Z23170:	CMPB	R0, #000002
	BLO	Z23362
	CMPB	R0, #000004
	BEQ	Z23362
	MOVB	000002(R5), R0
	SUB	#000015, R0
	BIC	#177400, R0
	CMPB	R0, #000004
	BHIS	Z23322
	CMPB	@#Y00042, #000005	; Положение человечка Y = 5 ?
	BEQ	Z23246
	MOVB	#000003, @#Y00034
	RETURN
Z23246:	MOVB	#000004, (R5)
	INCB	000002(R5)
	INCB	000003(R5)
	MOVB	#000006, 000004(R5)
	MOVB	#000001, @#Y00040
	MOV	#Z33030, @#Y00032
	TSTB	@#Y00035		; демо-режим?
	BNE	Z23320			; да => переходим
	ADD	#000012, @#Y00000	; Score += 10
Z23320:	RETURN
Z23322:	MOVB	@#Y00065, R0
	DECB	R0
	BNE	Z23362
	MOVB	@#Y00063, R0
	MOVB	000002(R5), R4
	SUB	R4, R0
	BIC	#177400, R0
	CMPB	R0, #000003
	BHIS	Z23362
	BR	Z23246
Z23362:	TSTB	000005(R5)
	BEQ	Z23430
	MOVB	000006(R5), R0
	SUB	#000017, R0
	CMPB	R0, #000002
	BHIS	Z23430
	TSTB	@#Y00044
	BNE	Z23430
	MOVB	#000004, @#Y00034
	CLRB	000005(R5)
	RETURN
Z23430:	ADD	R2, R5
	BR	Z23150
Z23436:	MOVB	@#Y00065, R0
	DECB	R0
	BNE	Z23502
	MOVB	@#Y00063, R0
	SUB	#000015, R0
	CMPB	R0, #000004
	BHIS	Z23502
	MOVB	#000005, @#Y00034
	MOVB	#000002, @#Y00065
	RETURN
Z23502:	TSTB	@#Y00074
	BEQ	Z23604
	MOVB	@#Y00073, R0
	SUB	#000015, R0
	CMPB	R0, #000004
	BHIS	Z23604
	MOVB	@#Y00042, R0		; Положение человечка Y
	SUB	#000005, R0
	BIC	#177400, R0
	BNE	Z23604
	MOVB	@#Y00054, R0
	BNE	Z23604
	MOVB	R0, @#Y00074
	MOVB	R0, @#Y00075
	INC	R0
	MOVB	R0, @#Y00054
	MOVB	R0, @#Y00040
	MOV	#Z32724, @#Y00032
Z23602:	;RETURN
Z23604:	RETURN
;
Z23606:	TSTB	@#Y00034
	BNE	Z23630
	TSTB	@#Y00004		; Время закончилось?
	BNE	Z23632			; нет => переходим
	MOVB	#000377, @#Y00034
Z23630:	RETURN
Z23632:	TSTB	@#Y00155
	BNE	Z23666
	CMPB	@#Y00154, #000022
	BNE	Z23666
	MOVB	#000001, @#Y00034
	MOVB	#000025, @#Y00042	; Положение человечка Y = 23.
	RETURN
Z23666:	TSTB	@#Y00036
	BEQ	Z23700
	BR	Z24212
Z23700:	CMPB	@#Y00155, #000023
	BNE	Z23724
	CMPB	@#Y00154, #000022
	BNE	Z23724
	JMP	Z26474			; Переход на какой-то отдельный игровой цикл
Z23724:	MOV	#Y00100, R5		; Адрес 4-х записей объектов
	MOV	#000010, R2
Z23734:	MOVB	(R5), R0
	CMPB	R0, #000377
	BNE	Z23750
	BR	Z24212
Z23750:	CMPB	R0, #000002
	BLO	Z24120
	CMPB	R0, #000004
	BEQ	Z24120
	MOVB	000002(R5), R0
	SUB	#000016, R0
	BIC	#177400, R0
	CMPB	R0, #000003
	BHIS	Z24120
	MOVB	@#Y00042, R0		; Положение человечка Y
	CMPB	R0, #000016
	BLO	Z24120
	CMPB	R0, #000020
	BLO	Z24036
	MOVB	#000003, @#Y00034
	RETURN
Z24036:	MOVB	#000004, (R5)
	MOVB	#000010, 000001(R5)
	INCB	000002(R5)
	INCB	000003(R5)
	MOVB	#000010, 000004(R5)
	MOVB	#000001, @#Y00040
	MOV	#Z33030, @#Y00032
	TSTB	@#Y00035		; демо-режим?
	BNE	Z24116			; да => выходим
	ADD	#000012, @#Y00000	; Score += 10
Z24116:	RETURN
Z24120:	TSTB	000005(R5)
	BEQ	Z24204
	MOVB	000006(R5), R0
	SUB	#000017, R0
	BIC	#177400, R0
	CMPB	R0, #000002
	BHIS	Z24204
	MOVB	@#Y00042, R0		; Положение человечка Y
	CMPB	R0, #000016
	BLO	Z24204
	CMPB	R0, #000021
	BEQ	Z24204
	MOVB	#000004, @#Y00034
	CLRB	000005(R5)
	RETURN
Z24204:	ADD	R2, R5
	BR	Z23734
Z24212:	CMPB	@#Y00042, #000017	; Положение человечка Y = 15. ?
	BHIS	Z24314
	MOVB	@#Y00041, R1		; Положение человечка X
	MOVB	@#Y00142, R0
Z24232:	BIC	#177400, R0
	CMPB	R0, #000040
	BLO	Z24266
	CMPB	R0, #000200
	BHIS	Z24260
	SUB	#000040, R0
	BR	Z24232
Z24260:	ADD	#000040, R0
	BR	Z24232
Z24266:	SUB	R1, R0
	INCB	R0
	BIC	#177400, R0
	CMPB	R0, #000003
	BHIS	Z24314
	MOVB	#000005, @#Y00034
	RETURN
Z24314:	TSTB	@#Y00036
	BEQ	Z24464
	MOVB	@#Y00042, R0		; Положение человечка Y
	CMPB	R0, #000016
	BHIS	Z24402
	MOVB	@#Y00041, R0		; Положение человечка X
	SUB	#000017, R0		; минус 15.
	CMPB	R0, #000003
	BHIS	Z24402
	TSTB	@#Y00037
	BNE	Z24402
	MOVB	#000001, @#Y00037
	MOVB	#000001, @#Y00040
	MOV	#Z32756, @#Y00032
Z24402:	MOVB	@#Y00041, R1		; Положение человечка X
	MOVB	@#Y00147, R0
	SUB	R1, R0
	INCB	R0
	BIC	#177400, R0
	CMPB	R0, #000003
	BHIS	Z24464
	MOVB	@#Y00042, R1		; Положение человечка Y
	MOVB	@#Y00150, R0
	SUB	R1, R0
	INCB	R0
	BIC	#177400, R0
	CMPB	R0, #000004
	BHIS	Z24464
	MOVB	#000006, @#Y00034
Z24464:	RETURN
;
; Подпрограмма: Печать индикаторной строки вверху экрана
Z24466:	MOV	#<Y01106+2>, R1		; Адрес в образе экрана план
	MOV	#Z24742, R3		; Адрес строки "TOP   SCORE TIME CAR STG"
	CALL	Z34366			; Печать строки
	MOV	@#Y00000, R2		; Score
	MOV	@#Y00002, R3		; Top Score
	SUB	R2, R3
	BHIS	Z24522
	MOV	R2, @#Y00002		; Обновляем Top Score
Z24522:	MOV	#<Y01106+40>, R1	; Адрес на экране план
	MOV	@#Y00002, R3		; Top score
	CALL	Z34400			; Вывод 5-значного десятичного числа
	INC	R1
	MOV	@#Y00000, R3		; Score
	CALL	Z34400			; Вывод 5-значного десятичного числа
	INC	R1			;
	INC	R1			; на два вправо
	MOVB	@#Y00004, R0		; Time
	CALL	Z34476			; Вывод 3-значного десятичного числа
	INC	R1			; на один вправо
	MOVB	@#Y00155, R0		; Car
	BNE	Z24606
	MOV	#Z24736, R3		; Адрес строки "   "
	CALL	Z34366			; Печать строки
	BR	Z24624
Z24606:	NEGB	R0
	BIC	#177400, R0		; оставить только младший байт
	ADD	#000024, R0		; +20.
	CALL	Z34476			; Вывод 3-значного десятичного числа
Z24624:	INC	R1			; на один вправо
	MOVB	@#Y00007, R0		; Stage
	CALL	Z34476			; Вывод 3-значного десятичного числа
	CLR	R0			; Lives
	BISB	@#Y00010, R0
	DECB	R0			; рисовать будем не более 2-х человечков
	BPL	Z24654
	RETURN
Z24654:	BNE	Z24660
	RETURN
Z24660:	MOVB	R0, R4
	MOVB	#000036, R2
Z24666:	MOV	R2, -(SP)		; Начало цикла рисования человечков
	MOVB	R2, Z34564
	CLRB	Z34565
	CALL	Z33362
	MOV	#Z11626, R3		; голова влево
	CALL	Z25402			; рисуем голову
	CALL	Z25402			; рисуем тело/ноги
	MOV	(SP)+, R2
	SUB	#000003, R2
	BIC	#177400, R2
	SOB	R4, Z24666		; Конец цикла рисования человечков
	RETURN
;
Z24736:	.ASCIZ	/   /
Z24742:	.ASCIZ	/TOP   SCORE TIME CAR STG/
	.EVEN

; Подпрограмма: если демо-режим, то GAME OVER
Z24774:	TSTB	@#Y00035		; демо-режим?
	BNE	Z25004			; да => переходим
	RETURN				;
Z25004:	MOV	#<Y01106+153>, R1	; Адрес в экран план
	MOV	#Z25172, R3		; Адрес строки GAME OVER
	CALL	Z34366			; Печать строки
	MOV	#<Y01106+200>, R1	; Адрес в экран план
	MOVB	@#Y00013, Z34570
	MOVB	@#Y00014, Z34571
	MOV	Z34570, R3
	MOV	#000040, R2
Z25050:	MOVB	(R3)+, R0
	BNE	Z25062
	MOV	#Z25206, R3		; Адрес бегущей строки для демо-режима
	BR	Z25050
Z25062:	MOVB	R0, (R1)+
	SOB	R2, Z25050
	TSTB	@#Y00020
	BEQ	Z25076
	RETURN
Z25076:	MOVB	@#Y00013, Z34570
	MOVB	@#Y00014, Z34571
	INC	Z34570
	MOVB	Z34570, @#Y00013
	MOVB	Z34571, @#Y00014
	MOV	Z34570, R3
	TSTB	(R3)
	BEQ	Z25144
	RETURN
Z25144:	MOV	#Z25206, R3		; Адрес бегущей строки для демо-режима
	MOV	R3, Z34570
	MOVB	Z34570, @#Y00013
	MOVB	Z34571, @#Y00014
	RETURN
;
Z25172:	.ASCIZ	/GAME   OVER/
	.EVEN
; Бегущая строка для демо-режима
Z25206:	.ASCII	/   STOP THE <ITA EXPRESS< /
Z25322:	.ASCIZ	/  PRESS ANY KEY TO START /
	.EVEN

; Подпрограмма: рисуем последовательность тайлов, R3 адрес записей, R1 куда
Z25402:	MOVB	(R3), R0
	BNE	Z25416
	INC	R3
	MOVB	R0, @#Y01103
	RETURN
Z25416:	CLR	R0
	BISB	@#Y01103, R0
	MOVB	(R3)+, Z34560
	ADD	Z34560, R0
	MOVB	R0, (R1)		; записываем номер тайла в экран-план
	CLR	R2
	BISB	(R3)+, R2
	ADD	R2, R1
	BR	Z25402
;
; Подпрограмма: Увеличить счётчики
Z25454:	MOVB	@#Y00015, Z34560
	MOV	#000001, R0
	XOR	R0, Z34560
	MOVB	Z34560, @#Y00015
	MOV	#Y00016, R3		; Счётчик
	CALL	Z25554
	MOV	#Y00020, R3		; Счётчик
	CALL	Z25554
	MOV	#Y00022, R3		; Счётчик
	CALL	Z25554
	MOV	#Y00024, R3		; Счётчик
	CALL	Z25554
	MOV	#Y00026, R3		; Быстрый счётчик времени
	CALL	Z25554
	MOV	#Y00030, R3		; Счётчик
; Подпрограмма: Увеличить счётчик R3
Z25554:	INCB	(R3)			; Увеличить этот счётчик
	CMPB	(R3), 000001(R3)	; дошли до лимита?
	BLO	Z25566			; нет => выходим
	CLRB	(R3)			; очищаем счётчик
Z25566:	RETURN
;
Z25570:	;		RETURN
Z25572:	;		RETURN

Z25666:	MOVB	#000001, @#Y00007	; Stage = 1
Z25674:	MOVB	#000003, @#Y00010	; Lives = 3
Z25702:	CLR	@#Y00000		; Score = 0
	RETURN

Z25574:	TSTB	@#Y00035
	BEQ	Z25604
	RETURN
Z25604:	TSTB	@#Y00040
	BNE	Z25614
	RETURN
Z25614:	MOV	@#Y00032, R3
	MOVB	000001(R3), R0
	INCB	R0
	BNE	Z25636
	MOVB	R0, @#Y00040
	RETURN
Z25636:	MOVB	(R3)+, Z34566
	MOVB	(R3)+, Z34567
	MOV	Z34566, R2
	MOV	R3, @#Y00032
	MOV	#000005, R1
	RETURN	;JMP	Z34300		; Звук и RETURN

Z25734:	CALL	Z26344
	CLRB	@#Y00164
	CLRB	@#Y00075
	CLRB	@#Y00074
	CLRB	@#Y00054
	CLRB	@#Y00065
	CLRB	@#Y00071
	MOVB	#000001, @#Y00006
	MOVB	#000001, @#Y00155	; Вагон = 1 (для отладки Stage 2 тут можно поставить #000013)
	MOV	#003417, R1
	MOVB	#000017, @#Y00041	; Положение человечка X = 15.
	MOVB	#000007, @#Y00042	; Положение человечка Y = 7
	MOV	#020616, @#Y00156
	CLR	@#Y00162
	MOV	#Z31240, R3
	MOVB	(R3)+, Z34566
	MOVB	(R3)+, Z34567
	MOV	Z34566, R2
	MOV	R3, @#Y00170
	MOV	R2, @#Y00166
	MOV	#Y00100, R3		; Адрес 4-х записей объектов
	MOV	#000020, R2
	MOVB	@#Y00007, R0		; Stage
	MOV	#000004, R1
	CMPB	R0, #000003
	BHIS	Z26124
	INCB	R0
	CLR	R1
	BISB	R0, R1
Z26124:	CLRB	(R3)+
	MOVB	R2, (R3)
	ADD	#000004, R3
	CLRB	(R3)
	ADD	#000003, R3
	ADD	#000040, R2
	SOB	R1, Z26124
	MOVB	#000377, (R3)
	RETURN
;
Z26156:	CALL	Z26344
	CLRB	@#Y00143
	CLRB	@#Y00144
	CLRB	@#Y00153
	MOVB	#000002, @#Y00006
	MOVB	#000003, @#Y00142
	MOVB	#000013, @#Y00155
	MOVB	#000017, @#Y00041	; Положение человечка X = 15.
	MOVB	#000020, @#Y00042	; Положение человечка Y = 7
	MOV	#Z17406, Z34570
	MOVB	Z34570, @#Y00145
	MOVB	Z34571, @#Y00146
	MOV	#Y00100, R3		; Адрес 4-х записей объектов
	MOV	#000020, R2		; NOTE: В оригинале тут ошибка: MOV 000020, R2
	MOVB	@#Y00007, R0		; Stage
	MOV	#000004, R1
	CMPB	#000003, R0
	BHIS	Z26314
	INCB	R0
	CLR	R1
	BISB	R0, R1
Z26314:	CLRB	(R3)+			; Очищаем 0-й байт записи объекта
	MOVB	R2, (R3)+		; 1-й байт
	INC	R3			; 2 пропускаем
	INC	R3			; 3 пропускаем
	INC	R3			; 4 пропускаем
	CLRB	(R3)+			; 5-й очищаем
	INC	R3			; 6 пропускаем
	INC	R3			; 7 пропускаем
	ADD	#000040, R2
	SOB	R1, Z26314		; повторяем
	RETURN
;
Z26344:	CLRB	@#Y00015
	CLRB	@#Y00016
	CLRB	@#Y00020
	CLRB	@#Y00022
	CLRB	@#Y00030
	CLRB	@#Y00034
	CLRB	@#Y00043
	CLRB	@#Y00044
	CLRB	@#Y00045
	CLRB	@#Y00046
	CLRB	@#Y00047
	CLRB	@#Y00050		; DX = 0
	CLRB	@#Y00050		; DX = 0
	CLRB	@#Y00051
	CLRB	@#Y00154
	CLRB	@#Y00005
	CLRB	@#Y00036
	CLRB	@#Y00040
	CLRB	@#Y00037
	CLRB	@#Y00055
	MOVB	#000310, @#Y00004	; Начальное время = 200.
	RETURN
;
Z26474:	;		CALL	Z25570		; RETURN
	MOV	#001000, @#Y00174
	MOVB	#000003, @#Y00176
Z26514:	CALL	Z33454		; Формирование реального экрана по образу
	CALL	Z25454		; Увеличить счётчики
	CALL	Z22322		; Скопировать блок в 448. байт
	CALL	Z24466
	CALL	Z20724
	CALL	Z21552
	CALL	Z20526
	CALL	Z16762
	CALL	Z17526
	CALL	Z11400
	CALL	Z24774		; Если демо то GAME OVER
	CALL	Z22712
	CALL	Z21520		; Обработка счётчика 100162 скроллируемого фона
	CALL	Z22202
	CALL	Z17154
	TSTB	@#Y00015
	BNE	Z26514
	CALL	Z20134
	CALL	Z26740
	INCB	@#Y00041	; X = X + 1
	TSTB	@#Y00154
	BNE	Z26514
	;		CALL	Z25570		; RETURN
	MOVB	#000001, @#Y00036
	MOVB	#000035, @#Y00147
	MOVB	#000013, @#Y00150
	MOVB	#000377, @#Y00151
	MOVB	#000001, @#Y00152
	CLR	@#Y00044
	CLR	@#Y00046
	CLRB	@#Y00043
	CLR	@#Y00050
	MOVB	#000035, @#Y00041		; X = 29.
	MOVB	#000020, @#Y00042
	RETURN
;
Z26740:	TSTB	@#Y00035
	BNE	Z27032
	MOV	@#Y00174, R3
	MOV	R3, R2
	MOV	#000005, R1
	TSTB	@#Y00176
	BEQ	Z26772
Z26766:		;CALL	Z34300		; Звук и RETURN
Z26772:	ADD	#177740, R3
	MOV	R3, @#Y00174
	MOVB	@#Y00176, R0
	CMPB	R0, #000017
	BEQ	Z27032
	CMPB	R0, #000011
	BHIS	Z27034
	ADD	#000003, R0
Z27026:	MOVB	R0, @#Y00176
Z27032:	RETURN
Z27034:	INCB	R0
	BR	Z27026

Z32724:	.BYTE	335,001,000,000,000,000,000,000,335,001,000,000,335,001,000,000
	.BYTE	173,001,000,000,000,000,000,000,377,377
Z32756:	.BYTE	237,000,237,000,237,000,237,000,325,000,325,000,325,000,325,000
	.BYTE	357,000,357,000,357,000,357,000,216,000,216,000,216,000,216,000
	.BYTE	263,000,263,000,263,000,263,000,377,377
Z33030:	.BYTE	216,000,107,000,237,000,120,000,275,000,137,000,357,000,167,000
	.BYTE	076,001,335,001,377,377
Z33056:	.BYTE	216,000,263,000,325,000,357,000,377,377
Z33070:	.BYTE	216,000,360,000,264,000,000,000,377,377


; Подпрограмма: Очистка переменных
Z33102:	CLR	R0
	MOVB	R0, @#Y00015
	MOVB	R0, @#Y00141
	MOVB	R0, @#Y01102
	MOVB	R0, @#Y01103
	DEC	R0
	MOVB	R0, @#Y00140
	MOV	#001400, R3
	MOV	R3, @#Y00016
	MOV	#002000, R3
	MOV	R3, @#Y00020
	MOVB	R3, @#Y00061
	MOVB	R3, @#Y00067
	MOV	R3, @#Y00076
	SWAB	R3
	MOVB	R3, @#Y00062
	MOVB	R3, @#Y00070
	MOV	#003000, @#Y00022	; Быстрый счётчик
	MOV	#004000, @#Y00024	; Быстрый счётчик
	MOV	#006400, @#Y00026	; Быстрый счётчик времени
	MOV	#010000, @#Y00030	; Быстрый счётчик
	CLR	@#Y00002		; Top score = 0
	MOV	#Z31200, R3		; Откуда копировать
	MOV	#<Y00202+640>, R2	; куда
	MOV	#000040, R1		; 32. раза
Z33250:	MOVB	(R3)+, (R2)+		;   копируем байт
	SOB	R1, Z33250		; повторяем
	RETURN
;
; Подпрограмма
Z33256:	CALL	Z33420			; Очистка образа экрана
	CLRB	@#Y01105
	BR	Z33454			; Формирование реального экрана по образу
;
; Подпрограмма: Включить стандартный набор тайлов
TILSTD:	CLR	R3
; Подпрограмма: Обменять тайлы на подменные, если нужно; R3 = признак набора тайлов
Z33302:	CMP	TILSET, R3		; Требуемый набор совпадает с текущим?
	BEQ	12$			; совпадает => выходим
	MOV	R3, TILSET		; Сохраняем признак набора тайлов
	MOV	#TILE80, R2		; Адрес где лежат реальные тайлы
	MOV	#TILEEX, R3		; Адрес блока подменных тайлов
10$:	MOVB	(R3)+, R1		; берём количество байт пропустить
	BNE	14$			; не ноль => продолжаем
12$:	RETURN
14$:	BIC	#177400, R1		; только младший байт
	ADD	R1, R2			; пропускаем байты сколько указано
	MOVB	(R3)+, R1		; берём количество слов для копирования (4..8) * 8
20$:	MOV	(R2), R5		; \
	MOV	(R3), (R2)+		; \
	MOV	R5, (R3)+		; обменять слова (R2) и (R3)
	SOB	R1, 20$			; повторяем для следующего слова
	BR	10$			; переходим к следующей группе тайлов
TILSET:	.WORD	0			; Признак текущего набора тайлов; 0 = стандартный набор
;
Z33356:	MOV	R1, Z34564
; Подпрограмма: Перевести Z34564 (X) и Z34565 (Y) в адрес в образе экрана
Z33362:	MOV	R5, -(SP)
	MOVB	Z34565, R5		; Y
	MOVB	Z34564, R1		; X
	ASL	R5			; \
	ASL	R5			; \
	ASL	R5			; \
	ASL	R5			; \
	ASL	R5			; R5 = R5 * 32
	ADD	R5, R1
	ADD	#Y01106, R1		; Адрес начала образа экрана
	MOV	(SP)+, R5
Z33416:	RETURN
;
; Подпрограмма: Очистка образа экрана
Z33420:	MOV	#020040, R0		; Пустые тайлы (пробелы)
	MOV	#Y01106, R3		; Адрес начала образа экрана план
	MOV	#000600, R1		; количество слов, тайлов всего = 32. * 24.
Z33434:	MOV	R0, (R3)+		;   записываем тайл в образ экрана план
	SOB	R1, Z33434		; повторяем
	MOV	#000600, R1		; Цикл по образу экрана факт
	COM	R0			; инвертируем номер тайла
Z33446:	MOV	R0, (R3)+		;   записываем тайл в образ экрана факт
	SOB	R1, Z33446		; повторяем
Z33452:	RETURN
;
; Подпрограмма: Формирование реального экрана по образу
Z33454:	MOV	R4, -(SP)		;
	MOV	R5, -(SP)		;
	MOV	#Y01106, R2		; Начало образа экрана план
	MOV	#Y02506, R3		; Начало образа экрана факт
	MOV	#044000, R4		; Адрес в ВОЗУ БК
	MOV	#000030, R5		; 24. строки
Z33500:	MOV	R5, -(SP)		; Начало цикла по строкам: сохраняем счётчик
	MOV	#000040, R5		; 32. символа в строке
Z33522:	MOVB	(R2), R0		; Начало цикла по строке -- берём номер тайла
	CMPB	R0, (R3)		; тайл план совпадает с фактом?
	BNE	Z33530			; нет => на формирование этого тайла
	INC	R3			; к следующему байту экрана факт
	INC	R4			; к следующей колонке
	INC	R4
Z33670:	MOVB	#000040, (R2)+		; обновляем план
	SOB	R5, Z33522		; Конец цикла по строке
Z33714:	ADD	#0700, R4		; к следующей строке экрана
	MOV	(SP)+, R5		; восстанавливаем счётчик по строкам
	SOB	R5, Z33500		; Конец цикла по строкам
	MOV	(SP)+, R5		;
	MOV	(SP)+, R4		;
Z33732:	RETURN
; Формирование тайла, в R0 его номер
Z33530:	BIC	#177400, R0		; оставляем младший байт
	MOVB	R0, (R3)+		; обновляем факт
	CMPB	R0, #060
	BHIS	4$
; Здесь рисуем тайлы 040..057 как паттерн 8x1 -> 8x8
	ASL	R0			; R0 = R0 * 2
	ADD	#<TILE20-100>, R0	; Плюс адрес начала блока тайлов
	MOV	(R0), R0		; Получаем 8 пикселей паттерна
	MOV	#100, R1		; величина 64. для перехода на следующую строку экрана
	MOV	R0, (R4)		; 0 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	R0, (R4)		; 1 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	R0, (R4)		; 2 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	R0, (R4)		; 3 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	R0, (R4)		; 4 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	R0, (R4)		; 5 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	R0, (R4)		; 6 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	R0, (R4)		; 7 строчка пишем в растр
	BR	20$
4$:	CMPB	R0, #147		; меньше 0x67 ?
	BHIS	10$			; нет => рисуем обычный тайл
; Здесь рисуем тайлы 060..132 как 8x5 -> 8x8 -- цифры и буквы
	MOV	R0, R1			; \
	ASL	R0			; \
	ASL	R0			; \
	ADD	R1, R0			; \
	ASL	R0			; R0 = R0 * 10
	ADD	#<TILE30-740>, R0	; Плюс адрес начала блока тайлов
	MOV	#100, R1		; величина 64. для перехода на следующую строку экрана
	MOV	(R0)+, (R4)		; 0 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0), (R4)		; 1 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0)+, (R4)		; 2 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0)+, (R4)		; 3 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0), (R4)		; 4 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0)+, (R4)		; 5 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0), (R4)		; 6 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	CLR	(R4)			; 7 строчка пишем в растр
	BR	20$
; Здесь рисуем тайлы 154..377 как 8x4 -> 8x8
10$:	ASL	R0			; \
	ASL	R0			; \
	ASL	R0			; R0 = R0 * 8
	ADD	#<TILE6C-1540>, R0	; Плюс адрес начала блока тайлов
	MOV	#100, R1		; величина 64. для перехода на следующую строку экрана
	MOV	(R0), (R4)		; 0 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0)+, (R4)		; 1 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0), (R4)		; 2 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0)+, (R4)		; 3 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0), (R4)		; 4 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0)+, (R4)		; 5 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0), (R4)		; 6 строчка пишем в растр
	ADD	R1, R4			;   следующая строка экрана
	MOV	(R0), (R4)		; 7 строчка пишем в растр
20$:	ADD	#177102, R4		; восстанавливаем адрес на экране плюс 2 в R4
	BR	Z33670

Z34224:	.WORD	0			; Признак того что есть символ с клавиатуры
; Подпрограмма: Опрос клавиатуры; клавиша есть: Z=0, клавиши нет: R0=0 и Z=1
Z34226:
	TSTB	@#177660		; Нажали клавишу?
	BPL	4$			; нет символа => выходим
	MOV	@#177662, R0		; код нажатой клавиши
2$:	MOV	R0, Z34224
	RETURN
4$:	CLR	R0
	MOV	R0, Z34224		; Стираем признак нажатой клавиши
	SEZ				; Возвращаем признак Z=1 -- нажатия нет
	RETURN

; Подпрограмма: что-то со звуком
Z34300:	RETURN ;STUB

;
; Подпрограмма: Печать строки; R3 = адрес строки; R1 = адрес в экран план
Z34366:	TSTB	(R3)			; не ноль?
	BNE	Z34374			; нет => продолжаем
	RETURN				;
Z34374:	MOVB	(R3)+, (R1)+		; копируем в экран план
	BR	Z34366			; продолжаем цикл
;
; Подпрограмма: Печать 5-значного десятичного числа; R3=число
Z34400:	MOV	#023420, R2		; 10000.
	CALL	Z34454			;
	MOV	#001750, R2		; 1000.
	CALL	Z34454			;
	MOV	#000144, R2		; 100.
	CALL	Z34454			;
	MOV	#000012, R2		; 10.
	CALL	Z34454			;
	ADD	#000060, R3		; '0'
	MOVB	R3, (R1)+		;
	MOVB	#000060, (R1)+		;
	RETURN				;
Z34454:	MOV	#000060, R0		; '0'
Z34460:	SUB	R2, R3			;
	BLO	Z34470			;
	INC	R0			;
	BR	Z34460			;
Z34470:	ADD	R2, R3			;
	MOVB	R0, (R1)+		; копируем в экран план
	RETURN
; Подпрограмма: Печать 3-значного десятичного числа R0
Z34476:	BIC	#177400, R0
	MOV	R3, -(SP)
	MOV	#000144, R2		; 100.
	CALL	Z34536			;
	MOV	#000012, R2		; 10.
	CALL	Z34536			;
	ADD	#000060, R0		; '0'
	MOVB	R0, (R1)+		;
	MOV	(SP)+, R3		;
	RETURN
Z34536:	MOV	#000060, R3		; '0'
Z34542:	SUB	R2, R0			;
	BLO	Z34552			;
	INC	R3			;
	BR	Z34542			;
Z34552:	ADD	R2, R0			;
	MOVB	R3, (R1)+		; копируем в экран план
	RETURN				;

SPRITE::
.INCLUDE /TILES.MAC/
SPREND::
	.EVEN

; Блок тайлов поезда: 448. байт -- 14. строк по 32. байта
Y00202:	.BLKB	700
Y01102:	.BYTE	0
Y01103:	.BYTE	0
Y01104:	.BYTE	0
Y01105:	.BYTE	0
; Образ экрана план -- 24. строки по 32. байта -- номера тайлов
Y01106::
	.ASCII	/        STOP THE EXPRESS        /
	.ASCII	/        /<360><360><360><360><360><360><360><360>
	.ASCII	<360><360><360><360><360><360><360><360>/        /
	.ASCII	/1983 HUDSON SOFT ON ZX SPECTRUM /
	.ASCII	/1990 PORT TO MS0515 BY LWOW SOFT/
	.ASCII	/2018 PORT TO BK0010 BY NZEEMIN  /
	.ASCII	/                                /
	.ASCII	/                                /
	.ASCII	/                                /
	.ASCII	/            ALL CAST            /
	.ASCII	/                                /
	.ASCII	/    /<200><201>/      /<216><217>/                  /
	.ASCII	/    /<220><221>/      /<252><253><351>/        /<352><353>/ /<312><313>/    /
	.ASCII	/    /<240><241>/      /<272><273><040>/        /<372><373>/ /<332><333>/    /
	.ASCII	/                                /
	.ASCII	/   YOU    TRAIN       SNAKE     /
	.ASCII	/          GANGSTER    BIRD      /
	.ASCII	/                                /
	.ASCII	/                                /
	.ASCII	/                                /
	.ASCII	/                                /
	.ASCII	/   PRESS ANY KEY TO CONTINUE    /
	.ASCII	/                                /
	.ASCII	/                                /
	.ASCII	/        /
.INCLUDE /VERSIO.MAC/
	.ASCII	/        /
;	.BLKB	1400
; Образ экрана факт -- 24. строки по 32. байта -- номера тайлов
Y02506::.BLKB	1400

END::
FREMEM = 40000 - END

	.END	START
